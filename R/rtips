R tips:

install.packages("mypkg", dependencies=TRUE)
library("mypkg")

-------------------------------------------------
[df2ra is from my popco/R/df2ra.R]

> r1 <- df2ra(d1)
> r2 <- df2ra(d2)
> yo <- c(as.vector(r1), as.vector(r2))
> dim(yo)
NULL
> length(yo)
[1] 54000
> ya <- array(yo, c(10,27,200))
> all(r1 == ya[,,101:200])
[1] FALSE
> all(r2 == ya[,,101:200])
[1] TRUE
> all(r1 == ya[,,1:100])
[1] TRUE
> dim(ya)
[1]  10  27 200

> ra <- array(yo, c(10, 27, 100, 2))
> dim(ra)
[1]  10  27 100   2
> all(r1 == ra[,,,1])
[1] TRUE
> all(r2 == ra[,,,2])
[1] TRUE
> all(r1 == ra[,,,2])

> newdimnames <- dimnames(r1)
> newdimnames[[4]] <- c("run1", "run2")
> rb <- array(c(as.vector(r1), as.vector(r2)), c(10, 27, 100, 2), dimnames=newdimnames)
> all(ra == rb)
[1] TRUE


RAs2multirunRA <- function(...) {
  ras <- c(...)
}

-------------------------------------------------

to clear the console in OX X, cmd-opt-L.

to get data, try something like
var <- read.csv("mypath")
var is called a data frame
Then you can refer to columns by name as var$colname, 
or refer to cols by index as var[i]

here is something bizarre:
var[2] refers to the second column
var[3,2] refers to the third entry in the second column
var[3,] refers to the third row

to set/get the directory, use getwd() and setwd(path)
to load a script, use source(script)

for (i in 1:519){names<-colnames(tst); if (pmatch("CHRIS",names[i],nomatch=0)) {print(names[i])}}

 for (n in grep(paste0("CHRIS", "_OE"), colnames(data), value=TRUE)) { # grep searches through array colnames(data)
   cat(n)                                                              # returning elements that match
   cat(": ")
   cat(tst[2,n])  # here we are using the returned name as the column index, and 2 as the row index
   cat("\n")
 }


To concatenate two data frames in the sense of adding their rows to make new df with the
same columns but as many rows as both combined, use rbind(df1, df2, ...).

I think cbind might do something similar for adding the second one as new columns, etc.
