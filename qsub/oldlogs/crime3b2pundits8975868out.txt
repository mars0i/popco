start: Fri Feb 15 16:01:15 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorpThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE,This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN207142359.csv"
ation.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each per"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright00 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN049479747.csv"
12, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
....

"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN098310779.csv"

(P20 P19 P18 P17 P16 P15 P14 P13 P1This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DEThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and creating output file csv file "../data/crime3/d2pundits/RUN449837462.csv"
eady.

Creating analogy networks for each person ....
   cl-ppcre
; Loading "cl-ppcre"
....

"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN539496661.csv"
Recreating output file csv file "../data/crime3/d2pundits/RUN448138106.csv"
2
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN512717401.csv"
tribution for more information.

"POPCO" 
"Welcome to COHERE,This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DEThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3start: its/RUN821140824.csv"
start:  15 16:02:45 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE,This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popc
"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy n"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
tware, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To lo  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN716383421.csv"
1081.csv"
isp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....


."variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN623434878.csv"
ile "../data/crime3/d2pundits/RUN915347116.csv"
(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN472920184.csv"
Recreating output file csv file "../data/crime3/d2pundits/RUN483698638.csv"
 ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" ""Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN456626705.csv"
." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.

Output threshold unchanged at 0.0d0

COHERE+POPCO ready.
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.


Creating analogy networks for each person ....
Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN882487263.csv"
Recreating output file csv file "../data/crime3/d2pundits/RUN742490305.csv"
 ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN178373090.csv"
eady.

Creating analogy netwostart:  each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN588903559.csv"
start:  15 16:03:30 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE,This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN015688954.csv"
12, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
....
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 

"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN139634235.csv"
Recreating output file csv file "../data/crime3/d2pundits/RUN939684021.csv"
 ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
solutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.


"POPCO" 
"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN606901366.csv"
mp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN557491452.csv"
12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN009669930.csv"

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN919621378.csv"
tribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
start:  15 16:04:00 CST 2013
This is SBCL 1.1.3, an implemThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN710404600.csv"
 constraint satisfaction'.


COHERE+POPCO ready.
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

Creating analogy networks for each person ....


(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN890721002.csv"
Recreating output file csv file "../data/crime3/d2pundits/RUN942836450.csv"
start: Fri Feb 15 16:04:47 CST 2013
start: Fri Feb 15 16:04:47 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
....

"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN169125672.csv"

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN377016883.csv"
start: Fri Feb 15 16:05:30 CST 2013
This is SBCL 1.1.3, an implemThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3start: its/RUN101320948.csv"
start:  15 16:05:45 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DEThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....
imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN022415708.csv"
os" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
  Load 1 ASDF system:
...
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN188565496.csv"
(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN726202422.csv"

 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN459894791.csv"
Recreating output file csv file "../data/crime3/d2pundits/RUN876934464.csv"
start: Fri Feb 15 16:06:00 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
start: Fri Feb 15 16:06:01 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
start: Fri Feb 15 16:06:01 CST 2013

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
  Load 1 ASDF system:
    cl-ppcre
    cl-ppcre
; Loading "cl-ppcre"
; Loading "cl-ppcre"
......


"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

Creating analogy networks for each person ....

Creating analogy networks for each person ....


(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN798575444.csv"

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN669494209.csv"
Recreating output file csv file "../This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorpThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN715864021.csv"
start: Fri Feb 15 16:11:45 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN998196034.csv"
start: Fri Feb 15 16:22:45 CST 2013
start: Fri Feb 15 16:22:45 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.


"POPCO" 
"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
....

"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN057794138.csv"

(P20 P19 P18 P17 P16 P15 P14 P13 P1This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN665732181.csv"
start: Fri Feb 15 16:23:46 CST 2013
start: Fri Feb 15 16:23:46 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
  Load 1 ASDF system:
    cl-ppcre
    cl-ppcre
; Loading "cl-ppcre"
; Loading "cl-ppcre"
....

"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

Creating analogy networks for each person ....


(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN076893536.csv"
Recreating output file csv file "../data/crime3/d2pundits/RUN038930393.csv"
start: Fri Feb 15 16:25:00 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorpThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN312802243.csv"
start: Fri Feb 15 16:27:01 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN447691674.csv"
start: Fri Feb 15 16:27:45 CST 2013
This is SBCL 1.1.3, an implemThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE,This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN258394190.csv"
/d2pundits/RUN091848438.csv"
y networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN739193544.csv"
start: Fri Feb 15 16:28:47 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMPThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN591244782.csv"
start: Fri Feb 15 16:33:17 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorpThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P2This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN263123972.csv"
start: Fri Feb 15 16:35:02 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN284067996.csv"
start: Fri Feb 15 16:39:32 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorpThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN836554234.csv"
0 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN324811933.csv"
start: Fri Feb 15 16:40:17 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN064342010.csv"
/d2pundits/RUN046441215.csv"
..
"variables" "utilities" "network"This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorpThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code  portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../datThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP,This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN813655003.csv"
start: Fri Feb 15 16:42:03 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P20 P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02
 P01 AAF AAT) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d2pundits/RUN290488697.csv"
Evaluation took:
  3306.489 seconds of real time
  3299.375419 seconds of total run time (3282.579972 user, 16.795447 system)
  [ Run times consist of 178.345 seconds GC time, and 3121.031 seconds non-GC time. ]
  99.78% CPU
  37 lambdas converted
  9,894,348,620,433 processor cycles
  917,873,153,840 bytes consed
  
Evaluation took:
  3287.242 seconds of real time
  3277.026816 seconds of total run time (3261.062243 user, 15.964573 system)
  [ Run times consist of 186.383 seconds GC time, and 3090.644 seconds non-GC time. ]
  99.69% CPU
  37 lambdas converted
  9,836,814,871,857 processor cycles
  917,884,195,280 bytes consed
  
Evaluation took:
  3330.508 seconds of real time
  3324.932533 seconds of total run time (3307.351206 user, 17.581327 system)
  [ Run times consist of 178.227 seconds GC time, and 3146.706 seconds non-GC time. ]
  99.83% CPU
  37 lambdas converted
  9,966,212,446,051 processor cycles
  917,881,136,752 bytes consed
  
Evaluation took:
  3307.187 seconds of real time
  3305.683459 seconds of total run time (3288.397087 user, 17.286372 system)
  [ Run times consist of 177.880 seconds GC time, and 3127.804 seconds non-GC time. ]
  99.95% CPU
  37 lambdas converted
  9,896,424,812,600 processor cycles
  917,859,278,032 bytes consed
  
Evaluation took:
  3289.902 seconds of real time
  3284.081744 seconds of total run time (3266.492418 user, 17.589326 system)
  [ Run times consist of 177.879 seconds GC time, and 3106.203 seconds non-GC time. ]
  99.82% CPU
  37 lambdas converted
  9,844,707,968,429 processor cycles
  917,874,855,312 bytes consed
  
Evaluation took:
  3352.921 seconds of real time
  3344.936492 seconds of total run time (3328.095053 user, 16.841439 system)
  [ Run times consist of 189.296 seconds GC time, and 3155.641 seconds non-GC time. ]
  99.76% CPU
  37 lambdas converted
  10,033,277,355,624 processor cycles
  917,860,861,728 bytes consed
  
Evaluation took:
  3355.351 seconds of real time
  3347.184150 seconds of total run time (3329.400854 user, 17.783296 system)
  [ Run times consist of 183.543 seconds GC time, and 3163.642 seconds non-GC time. ]
  99.76% CPU
  37 lambdas converted
  10,040,549,617,052 processor cycles
  917,868,852,336 bytes consed
  
Evaluation took:
  3352.666 seconds of real time
  3347.395119 seconds of total run time (3329.570828 user, 17.824291 system)
  [ Run times consist of 178.890 seconds GC time, and 3168.506 seconds non-GC time. ]
  99.84% CPU
  37 lambdas converted
  10,032,522,123,668 processor cycles
  917,885,709,280 bytes consed
  
Evaluation took:
  3365.552 seconds of real time
  3345.730372 seconds of total run time (3327.440152 user, 18.290220 system)
  [ Run times consist of 187.509 seconds GC time, and 3158.222 seconds non-GC time. ]
  99.41% CPU
  37 lambdas converted
  10,071,081,402,070 processor cycles
  917,852,511,568 bytes consed
  
Evaluation took:
  3367.218 seconds of real time
  3348.713919 seconds of total run time (3330.593673 user, 18.120246 system)
  [ Run times consist of 189.697 seconds GC time, and 3159.017 seconds non-GC time. ]
  99.45% CPU
  37 lambdas converted
  10,075,930,667,157 processor cycles
  917,885,331,696 bytes consed
  
Evaluation took:
  3395.402 seconds of real time
  3382.216826 seconds of total run time (3364.056586 user, 18.160240 system)
  [ Run times consist of 188.494 seconds GC time, and 3193.723 seconds non-GC time. ]
  99.61% CPU
  37 lambdas converted
  10,160,351,655,822 processor cycles
  917,875,078,960 bytes consed
  
Evaluation took:
  3380.468 seconds of real time
  3372.682274 seconds of total run time (3354.720005 user, 17.962269 system)
  [ Run times consist of 185.830 seconds GC time, and 3186.853 seconds non-GC time. ]
  99.77% CPU
  37 lambdas converted
  10,115,485,881,916 processor cycles
  917,861,949,296 bytes consed
  
Evaluation took:
  3439.154 seconds of real time
  3436.652550 seconds of total run time (3418.232350 user, 18.420200 system)
  [ Run times consist of 187.077 seconds GC time, and 3249.576 seconds non-GC time. ]
  99.93% CPU
  37 lambdas converted
  10,291,285,703,422 processor cycles
  917,845,308,032 bytes consed
  
Evaluation took:
  3400.110 seconds of real time
  3393.953041 seconds of total run time (3375.046915 user, 18.906126 system)
  [ Run times consist of 189.713 seconds GC time, and 3204.241 seconds non-GC time. ]
  99.82% CPU
  37 lambdas converted
  10,174,283,691,363 processor cycles
  917,837,909,792 bytes consed
  
Evaluation took:
  3420.259 seconds of real time
  3413.548062 seconds of total run time (3396.518651 user, 17.029411 system)
  [ Run times consist of 188.406 seconds GC time, and 3225.143 seconds non-GC time. ]
  99.80% CPU
  37 lambdas converted
  10,234,742,531,315 processor cycles
  917,863,671,680 bytes consed
  
Evaluation took:
  3437.550 seconds of real time
  3425.354266 seconds of total run time (3407.093043 user, 18.261223 system)
  [ Run times consist of 190.321 seconds GC time, and 3235.034 seconds non-GC time. ]
  99.65% CPU
  37 lambdas converted
  10,286,390,158,758 processor cycles
  917,889,419,984 bytes consed
  
Evaluation took:
  3440.018 seconds of real time
  3431.826283 seconds of total run time (3414.643895 user, 17.182388 system)
  [ Run times consist of 190.792 seconds GC time, and 3241.035 seconds non-GC time. ]
  99.76% CPU
  37 lambdas converted
  10,293,774,335,145 processor cycles
  917,870,645,840 bytes consed
  
Evaluation took:
  3457.485 seconds of real time
  3448.966677 seconds of total run time (3433.082092 user, 15.884585 system)
  [ Run times consist of 190.378 seconds GC time, and 3258.589 seconds non-GC time. ]
  99.75% CPU
  37 lambdas converted
  10,345,943,827,728 processor cycles
  917,866,863,056 bytes consed
  
Evaluation took:
  3432.029 seconds of real time
  3426.273127 seconds of total run time (3408.619811 user, 17.653316 system)
  [ Run times consist of 179.102 seconds GC time, and 3247.172 seconds non-GC time. ]
  99.83% CPU
  37 lambdas converted
  10,269,795,282,181 processor cycles
  917,882,362,384 bytes consed
  
Evaluation took:
  3421.097 seconds of real time
  3412.365242 seconds of total run time (3395.763766 user, 16.601476 system)
  [ Run times consist of 190.581 seconds GC time, and 3221.785 seconds non-GC time. ]
  99.74% CPU
  37 lambdas converted
  10,237,131,596,178 processor cycles
  917,875,564,384 bytes consed
  
Evaluation took:
  3289.134 seconds of real time
  3282.835934 seconds of total run time (3264.623702 user, 18.212232 system)
  [ Run times consist of 181.344 seconds GC time, and 3101.492 seconds non-GC time. ]
  99.81% CPU
  37 lambdas converted
  9,842,444,305,272 processor cycles
  917,848,043,360 bytes consed
  
Evaluation took:
  3477.541 seconds of real time
  3471.362273 seconds of total run time (3452.676114 user, 18.686159 system)
  [ Run times consist of 205.228 seconds GC time, and 3266.135 seconds non-GC time. ]
  99.82% CPU
  37 lambdas converted
  10,406,146,542,893 processor cycles
  917,875,839,696 bytes consed
  
Evaluation took:
  3489.606 seconds of real time
  3470.231444 seconds of total run time (3451.669266 user, 18.562178 system)
  [ Run times consist of 191.470 seconds GC time, and 3278.762 seconds non-GC time. ]
  99.44% CPU
  37 lambdas converted
  10,442,134,801,233 processor cycles
  917,867,950,704 bytes consed
  
Evaluation took:
  3358.805 seconds of real time
  3337.149677 seconds of total run time (3318.920448 user, 18.229229 system)
  [ Run times consist of 184.738 seconds GC time, and 3152.412 seconds non-GC time. ]
  99.36% CPU
  37 lambdas converted
  10,050,862,719,952 processor cycles
  917,878,314,304 bytes consed
  
Evaluation took:
  3489.181 seconds of real time
  3475.838591 seconds of total run time (3456.911469 user, 18.927122 system)
  [ Run times consist of 203.207 seconds GC time, and 3272.632 seconds non-GC time. ]
  99.62% CPU
  37 lambdas converted
  10,441,039,201,011 processor cycles
  917,866,216,672 bytes consed
  
Evaluation took:
  3473.668 seconds of real time
  3462.722587 seconds of total run time (3443.789465 user, 18.933122 system)
  [ Run times consist of 203.870 seconds GC time, and 3258.853 seconds non-GC time. ]
  99.68% CPU
  37 lambdas converted
  10,394,620,063,019 processor cycles
  917,863,376,368 bytes consed
  
Evaluation took:
  3601.456 seconds of real time
  3568.865450 seconds of total run time (3549.383412 user, 19.482038 system)
  [ Run times consist of 212.392 seconds GC time, and 3356.474 seconds non-GC time. ]
  99.10% CPU
  37 lambdas converted
  10,776,846,723,264 processor cycles
  917,885,650,864 bytes consed
  
Evaluation took:
  3545.295 seconds of real time
  3540.011837 seconds of total run time (3520.256840 user, 19.754997 system)
  [ Run times consist of 203.859 seconds GC time, and 3336.153 seconds non-GC time. ]
  99.85% CPU
  37 lambdas converted
  10,608,773,742,261 processor cycles
  917,844,019,168 bytes consed
  
Evaluation took:
  3550.641 seconds of real time
  3541.999534 seconds of total run time (3522.363519 user, 19.636015 system)
  [ Run times consist of 201.549 seconds GC time, and 3340.451 seconds non-GC time. ]
  99.76% CPU
  37 lambdas converted
  10,624,954,401,208 processor cycles
  917,877,686,256 bytes consed
  
Evaluation took:
  3572.123 seconds of real time
  3567.723624 seconds of total run time (3546.851797 user, 20.871827 system)
  [ Run times consist of 206.950 seconds GC time, and 3360.774 seconds non-GC time. ]
  99.88% CPU
  37 lambdas converted
  10,689,162,436,577 processor cycles
  917,884,211,424 bytes consed
  
Evaluation took:
  3588.259 seconds of real time
  3581.331555 seconds of total run time (3560.617704 user, 20.713851 system)
  [ Run times consist of 211.128 seconds GC time, and 3370.204 seconds non-GC time. ]
  99.81% CPU
  37 lambdas converted
  10,737,448,348,176 processor cycles
  917,858,303,536 bytes consed
  
Evaluation took:
  3698.322 seconds of real time
  3689.459117 seconds of total run time (3668.618285 user, 20.840832 system)
  [ Run times consist of 211.893 seconds GC time, and 3477.567 seconds non-GC time. ]
  99.76% CPU
  37 lambdas converted
  11,066,703,921,709 processor cycles
  917,848,136,048 bytes consed
  
Evaluation took:
  3539.523 seconds of real time
  3529.305464 seconds of total run time (3509.189522 user, 20.115942 system)
  [ Run times consist of 197.817 seconds GC time, and 3331.489 seconds non-GC time. ]
  99.71% CPU
  37 lambdas converted
  10,591,520,110,585 processor cycles
  917,861,275,872 bytes consed
  
Evaluation took:
  3685.949 seconds of real time
  3676.861032 seconds of total run time (3654.490433 user, 22.370599 system)
  [ Run times consist of 213.165 seconds GC time, and 3463.697 seconds non-GC time. ]
  99.75% CPU
  37 lambdas converted
  11,029,678,813,310 processor cycles
  917,842,799,152 bytes consed
  
Evaluation took:
  3666.549 seconds of real time
  3655.407294 seconds of total run time (3634.482475 user, 20.924819 system)
  [ Run times consist of 218.156 seconds GC time, and 3437.252 seconds non-GC time. ]
  99.70% CPU
  37 lambdas converted
  10,971,877,916,065 processor cycles
  917,884,232,432 bytes consed
  
Evaluation took:
  3576.078 seconds of real time
  3568.817458 seconds of total run time (3548.073611 user, 20.743847 system)
  [ Run times consist of 209.513 seconds GC time, and 3359.305 seconds non-GC time. ]
  99.80% CPU
  37 lambdas converted
  10,700,906,148,959 processor cycles
  917,878,395,680 bytes consed
  
Evaluation took:
  3721.956 seconds of real time
  3714.306339 seconds of total run time (3692.209698 user, 22.096641 system)
  [ Run times consist of 222.095 seconds GC time, and 3492.212 seconds non-GC time. ]
  99.79% CPU
  37 lambdas converted
  11,137,678,891,713 processor cycles
  917,858,671,120 bytes consed
  
Evaluation took:
  3710.997 seconds of real time
  3708.520219 seconds of total run time (3687.005490 user, 21.514729 system)
  [ Run times consist of 221.545 seconds GC time, and 3486.976 seconds non-GC time. ]
  99.93% CPU
  37 lambdas converted
  11,104,606,265,074 processor cycles
  917,883,815,968 bytes consed
  
Evaluation took:
  3772.251 seconds of real time
  3758.511619 seconds of total run time (3736.236006 user, 22.275613 system)
  [ Run times consist of 231.461 seconds GC time, and 3527.051 seconds non-GC time. ]
  99.64% CPU
  37 lambdas converted
  11,288,184,859,036 processor cycles
  917,857,564,080 bytes consed
  
Evaluation took:
  3620.202 seconds of real time
  3615.548353 seconds of total run time (3594.320580 user, 21.227773 system)
  [ Run times consist of 206.727 seconds GC time, and 3408.822 seconds non-GC time. ]
  99.87% CPU
  37 lambdas converted
  10,832,940,587,097 processor cycles
  917,874,170,976 bytes consed
  
Evaluation took:
  3772.517 seconds of real time
  3771.053712 seconds of total run time (3747.823244 user, 23.230468 system)
  [ Run times consist of 231.239 seconds GC time, and 3539.815 seconds non-GC time. ]
  99.96% CPU
  37 lambdas converted
  11,288,693,970,094 processor cycles
  917,894,975,184 bytes consed
  
Evaluation took:
  3635.781 seconds of real time
  3615.574348 seconds of total run time (3595.160452 user, 20.413896 system)
  [ Run times consist of 212.656 seconds GC time, and 3402.919 seconds non-GC time. ]
  99.44% CPU
  37 lambdas converted
  10,879,557,912,889 processor cycles
  917,880,365,120 bytes consed
  
Evaluation took:
  3773.253 seconds of real time
  3763.704830 seconds of total run time (3742.411067 user, 21.293763 system)
  [ Run times consist of 217.061 seconds GC time, and 3546.644 seconds non-GC time. ]
  99.75% CPU
  37 lambdas converted
  11,290,894,632,050 processor cycles
  917,823,382,800 bytes consed
  
Evaluation took:
  3796.089 seconds of real time
  3777.832682 seconds of total run time (3755.541071 user, 22.291611 system)
  [ Run times consist of 230.401 seconds GC time, and 3547.432 seconds non-GC time. ]
  99.52% CPU
  37 lambdas converted
  11,359,516,902,467 processor cycles
  917,888,728,768 bytes consed
  
Evaluation took:
  3664.401 seconds of real time
  3655.577268 seconds of total run time (3634.355494 user, 21.221774 system)
  [ Run times consist of 215.212 seconds GC time, and 3440.366 seconds non-GC time. ]
  99.76% CPU
  37 lambdas converted
  10,965,450,494,360 processor cycles
  917,882,315,632 bytes consed
  
Evaluation took:
  3707.404 seconds of real time
  3692.330680 seconds of total run time (3670.405013 user, 21.925667 system)
  [ Run times consist of 222.534 seconds GC time, and 3469.797 seconds non-GC time. ]
  99.59% CPU
  37 lambdas converted
  11,094,133,793,882 processor cycles
  917,861,304,912 bytes consed
  
Evaluation took:
  3708.878 seconds of real time
  3689.680083 seconds of total run time (3667.849402 user, 21.830681 system)
  [ Run times consist of 218.037 seconds GC time, and 3471.644 seconds non-GC time. ]
  99.48% CPU
  37 lambdas converted
  11,098,542,898,692 processor cycles
  917,865,271,136 bytes consed
  
Evaluation took:
  3757.654 seconds of real time
  3747.662269 seconds of total run time (3724.467795 user, 23.194474 system)
  [ Run times consist of 213.398 seconds GC time, and 3534.265 seconds non-GC time. ]
  99.73% CPU
  37 lambdas converted
  11,244,218,785,475 processor cycles
  917,836,807,696 bytes consed
  
Evaluation took:
  3744.324 seconds of real time
  3713.821414 seconds of total run time (3690.861904 user, 22.959510 system)
  [ Run times consist of 215.728 seconds GC time, and 3498.094 seconds non-GC time. ]
  99.19% CPU
  37 lambdas converted
  11,204,331,188,504 processor cycles
  917,870,425,296 bytes consed
  
Evaluation took:
  3736.154 seconds of real time
  3729.901969 seconds of total run time (3708.079286 user, 21.822683 system)
  [ Run times consist of 228.128 seconds GC time, and 3501.774 seconds non-GC time. ]
  99.83% CPU
  37 lambdas converted
  11,179,884,309,923 processor cycles
  917,866,636,864 bytes consed
  
Evaluation took:
  3741.484 seconds of real time
  3731.279759 seconds of total run time (3708.672196 user, 22.607563 system)
  [ Run times consist of 215.572 seconds GC time, and 3515.708 seconds non-GC time. ]
  99.73% CPU
  37 lambdas converted
  11,195,832,821,622 processor cycles
  917,874,775,408 bytes consed
  
Evaluation took:
  3741.882 seconds of real time
  3721.609229 seconds of total run time (3698.524739 user, 23.084490 system)
  [ Run times consist of 218.615 seconds GC time, and 3502.995 seconds non-GC time. ]
  99.46% CPU
  37 lambdas converted
  11,197,025,862,926 processor cycles
  917,875,528,592 bytes consed
  
Evaluation took:
  2953.758 seconds of real time
  2953.000076 seconds of total run time (2939.963058 user, 13.037018 system)
  [ Run times consist of 149.158 seconds GC time, and 2803.843 seconds non-GC time. ]
  99.97% CPU
  37 lambdas converted
  8,838,678,802,258 processor cycles
  917,883,416,432 bytes consed
  
Evaluation took:
  3289.401 seconds of real time
  3280.900227 seconds of total run time (3263.996797 user, 16.903430 system)
  [ Run times consist of 164.736 seconds GC time, and 3116.165 seconds non-GC time. ]
  99.74% CPU
  37 lambdas converted
  9,843,307,311,278 processor cycles
  917,844,575,472 bytes consed
  
Evaluation took:
  3312.517 seconds of real time
  3310.448736 seconds of total run time (3293.338337 user, 17.110399 system)
  [ Run times consist of 177.974 seconds GC time, and 3132.475 seconds non-GC time. ]
  99.94% CPU
  37 lambdas converted
  9,912,480,597,296 processor cycles
  917,869,232,464 bytes consed
  
Evaluation took:
  3285.608 seconds of real time
  3282.839933 seconds of total run time (3266.331442 user, 16.508491 system)
  [ Run times consist of 177.564 seconds GC time, and 3105.276 seconds non-GC time. ]
  99.92% CPU
  37 lambdas converted
  9,831,723,074,546 processor cycles
  917,858,443,280 bytes consed
  
Evaluation took:
  3332.981 seconds of real time
  3331.636515 seconds of total run time (3314.584107 user, 17.052408 system)
  [ Run times consist of 186.810 seconds GC time, and 3144.827 seconds non-GC time. ]
  99.96% CPU
  37 lambdas converted
  9,973,478,465,695 processor cycles
  917,848,382,576 bytes consed
  
Evaluation took:
  3302.230 seconds of real time
  3290.286801 seconds of total run time (3272.915442 user, 17.371359 system)
  [ Run times consist of 177.897 seconds GC time, and 3112.390 seconds non-GC time. ]
  99.64% CPU
  37 lambdas converted
  9,881,608,227,554 processor cycles
  917,857,028,928 bytes consed
  
Evaluation took:
  3348.439 seconds of real time
  3340.331192 seconds of total run time (3324.880541 user, 15.450651 system)
  [ Run times consist of 183.494 seconds GC time, and 3156.838 seconds non-GC time. ]
  99.76% CPU
  37 lambdas converted
  10,019,736,217,417 processor cycles
  917,862,318,304 bytes consed
  
Evaluation took:
  3204.987 seconds of real time
  3204.024914 seconds of total run time (3187.891366 user, 16.133548 system)
  [ Run times consist of 172.034 seconds GC time, and 3031.991 seconds non-GC time. ]
  99.97% CPU
  37 lambdas converted
  9,590,566,825,039 processor cycles
  917,865,407,008 bytes consed
  
Evaluation took:
  3226.221 seconds of real time
  3215.349193 seconds of total run time (3199.805556 user, 15.543637 system)
  [ Run times consist of 174.332 seconds GC time, and 3041.018 seconds non-GC time. ]
  99.66% CPU
  37 lambdas converted
  9,653,924,756,259 processor cycles
  917,855,890,560 bytes consed
  
Evaluation took:
  3248.878 seconds of real time
  3239.352544 seconds of total run time (3221.599243 user, 17.753301 system)
  [ Run times consist of 173.366 seconds GC time, and 3065.987 seconds non-GC time. ]
  99.71% CPU
  37 lambdas converted
  9,721,954,356,408 processor cycles
  917,872,033,808 bytes consed
  
Evaluation took:
  3244.776 seconds of real time
  3235.353152 seconds of total run time (3217.975794 user, 17.377358 system)
  [ Run times consist of 174.664 seconds GC time, and 3060.690 seconds non-GC time. ]
  99.71% CPU
  37 lambdas converted
  9,709,468,846,117 processor cycles
  917,846,725,776 bytes consed
  
Evaluation took:
  3304.473 seconds of real time
  3298.717518 seconds of total run time (3282.614966 user, 16.102552 system)
  [ Run times consist of 169.944 seconds GC time, and 3128.774 seconds non-GC time. ]
  99.83% CPU
  37 lambdas converted
  9,888,100,802,415 processor cycles
  917,875,770,768 bytes consed
  
Evaluation took:
  3226.743 seconds of real time
  3215.425181 seconds of total run time (3199.601586 user, 15.823595 system)
  [ Run times consist of 169.681 seconds GC time, and 3045.745 seconds non-GC time. ]
  99.65% CPU
  37 lambdas converted
  9,655,576,943,425 processor cycles
  917,869,172,256 bytes consed
  
Evaluation took:
  3292.635 seconds of real time
  3290.537763 seconds of total run time (3274.557192 user, 15.980571 system)
  [ Run times consist of 178.841 seconds GC time, and 3111.697 seconds non-GC time. ]
  99.94% CPU
  37 lambdas converted
  9,852,986,187,063 processor cycles
  917,885,629,296 bytes consed
  
Evaluation took:
  3248.816 seconds of real time
  3245.022682 seconds of total run time (3228.273228 user, 16.749454 system)
  [ Run times consist of 175.727 seconds GC time, and 3069.296 seconds non-GC time. ]
  99.88% CPU
  37 lambdas converted
  9,721,606,227,470 processor cycles
  917,860,890,896 bytes consed
  
Evaluation took:
  3305.234 seconds of real time
  3286.600361 seconds of total run time (3270.237849 user, 16.362512 system)
  [ Run times consist of 180.646 seconds GC time, and 3105.955 seconds non-GC time. ]
  99.44% CPU
  37 lambdas converted
  9,890,533,908,959 processor cycles
  917,861,520,880 bytes consed
  
Evaluation took:
  3414.052 seconds of real time
  3389.778675 seconds of total run time (3372.381320 user, 17.397355 system)
  [ Run times consist of 191.041 seconds GC time, and 3198.738 seconds non-GC time. ]
  99.29% CPU
  37 lambdas converted
  10,216,155,356,190 processor cycles
  917,886,841,232 bytes consed
  
Evaluation took:
  6325.332 seconds of real time
  6306.073330 seconds of total run time (6283.381780 user, 22.691550 system)
  [ Run times consist of 331.668 seconds GC time, and 5974.406 seconds non-GC time. ]
  99.70% CPU
  37 lambdas converted
  10,143,395,343,697 processor cycles
  917,884,567,536 bytes consed
  
Evaluation took:
  6416.151 seconds of real time
  6382.005788 seconds of total run time (6359.283242 user, 22.722546 system)
  [ Run times consist of 332.988 seconds GC time, and 6049.018 seconds non-GC time. ]
  99.47% CPU
  37 lambdas converted
  10,289,048,627,384 processor cycles
  917,864,330,736 bytes consed
  
Evaluation took:
  6570.810 seconds of real time
  6550.323200 seconds of total run time (6527.587656 user, 22.735544 system)
  [ Run times consist of 318.506 seconds GC time, and 6231.818 seconds non-GC time. ]
  99.69% CPU
  37 lambdas converted
  10,537,124,104,243 processor cycles
  917,846,928,912 bytes consed
  
Evaluation took:
  6413.162 seconds of real time
  6378.888262 seconds of total run time (6355.145871 user, 23.742391 system)
  [ Run times consist of 326.148 seconds GC time, and 6052.741 seconds non-GC time. ]
  99.47% CPU
  37 lambdas converted
  10,284,256,420,981 processor cycles
  917,873,300,304 bytes consed
  
Evaluation took:
  6399.695 seconds of real time
  6369.921625 seconds of total run time (6347.253071 user, 22.668554 system)
  [ Run times consist of 319.081 seconds GC time, and 6050.841 seconds non-GC time. ]
  99.53% CPU
  37 lambdas converted
  10,262,718,430,352 processor cycles
  917,885,051,408 bytes consed
  
Evaluation took:
  6415.770 seconds of real time
  6387.824903 seconds of total run time (6364.552441 user, 23.272462 system)
  [ Run times consist of 327.621 seconds GC time, and 6060.204 seconds non-GC time. ]
  99.56% CPU
  37 lambdas converted
  10,288,423,841,923 processor cycles
  917,871,037,504 bytes consed
  
Evaluation took:
  6348.694 seconds of real time
  6330.357639 seconds of total run time (6306.949198 user, 23.408441 system)
  [ Run times consist of 320.550 seconds GC time, and 6009.808 seconds non-GC time. ]
  99.71% CPU
  37 lambdas converted
  10,180,874,544,596 processor cycles
  917,785,639,968 bytes consed
  
Evaluation took:
  6415.144 seconds of real time
  6381.707833 seconds of total run time (6359.069274 user, 22.638559 system)
  [ Run times consist of 305.272 seconds GC time, and 6076.436 seconds non-GC time. ]
  99.48% CPU
  37 lambdas converted
  10,287,433,872,211 processor cycles
  917,881,713,024 bytes consed
  
Evaluation took:
  6374.661 seconds of real time
  6333.002238 seconds of total run time (6310.300689 user, 22.701549 system)
  [ Run times consist of 331.315 seconds GC time, and 6001.688 seconds non-GC time. ]
  99.35% CPU
  37 lambdas converted
  10,222,411,308,068 processor cycles
  917,880,338,928 bytes consed
  
Evaluation took:
  6389.574 seconds of real time
  6360.225099 seconds of total run time (6336.431716 user, 23.793383 system)
  [ Run times consist of 320.353 seconds GC time, and 6039.873 seconds non-GC time. ]
  99.54% CPU
  37 lambdas converted
  10,246,394,154,336 processor cycles
  917,857,128,944 bytes consed
  
Evaluation took:
  6385.482 seconds of real time
  6347.525029 seconds of total run time (6324.051598 user, 23.473431 system)
  [ Run times consist of 334.284 seconds GC time, and 6013.242 seconds non-GC time. ]
  99.41% CPU
  37 lambdas converted
  10,239,739,120,493 processor cycles
  917,888,182,496 bytes consed
  
Evaluation took:
  6406.537 seconds of real time
  6369.836637 seconds of total run time (6346.506184 user, 23.330453 system)
  [ Run times consist of 320.017 seconds GC time, and 6049.820 seconds non-GC time. ]
  99.43% CPU
  37 lambdas converted
  10,273,502,648,052 processor cycles
  917,870,189,184 bytes consed
  
Evaluation took:
  6348.039 seconds of real time
  6319.219333 seconds of total run time (6297.377653 user, 21.841680 system)
  [ Run times consist of 321.722 seconds GC time, and 5997.498 seconds non-GC time. ]
  99.55% CPU
  37 lambdas converted
  10,179,788,210,768 processor cycles
  917,836,664,928 bytes consed
  
Evaluation took:
  6383.868 seconds of real time
  6358.774319 seconds of total run time (6336.500705 user, 22.273614 system)
  [ Run times consist of 340.844 seconds GC time, and 6017.931 seconds non-GC time. ]
  99.61% CPU
  37 lambdas converted
  10,237,434,768,947 processor cycles
  917,876,449,904 bytes consed
  
Evaluation took:
  6388.344 seconds of real time
  6356.016739 seconds of total run time (6333.761122 user, 22.255617 system)
  [ Run times consist of 326.588 seconds GC time, and 6029.429 seconds non-GC time. ]
  99.49% CPU
  37 lambdas converted
  10,244,384,877,264 processor cycles
  917,866,459,232 bytes consed
  
Evaluation took:
  6385.031 seconds of real time
  6353.354143 seconds of total run time (6330.608601 user, 22.745542 system)
  [ Run times consist of 345.650 seconds GC time, and 6007.705 seconds non-GC time. ]
  99.50% CPU
  37 lambdas converted
  10,239,299,564,995 processor cycles
  917,873,325,936 bytes consed
  
Evaluation took:
  6412.944 seconds of real time
  6370.641516 seconds of total run time (6347.887975 user, 22.753541 system)
  [ Run times consist of 336.001 seconds GC time, and 6034.641 seconds non-GC time. ]
  99.34% CPU
  37 lambdas converted
  10,283,802,665,227 processor cycles
  917,883,130,912 bytes consed
  
Evaluation took:
  6389.526 seconds of real time
  6349.001805 seconds of total run time (6325.144432 user, 23.857373 system)
  [ Run times consist of 326.140 seconds GC time, and 6022.862 seconds non-GC time. ]
  99.37% CPU
  37 lambdas converted
  10,246,263,266,703 processor cycles
  917,877,756,224 bytes consed
  
Evaluation took:
  6436.855 seconds of real time
  6429.019641 seconds of total run time (6406.026136 user, 22.993505 system)
  [ Run times consist of 337.081 seconds GC time, and 6091.939 seconds non-GC time. ]
  99.88% CPU
  37 lambdas converted
  10,322,208,094,628 processor cycles
  917,855,040,128 bytes consed
  
Evaluation took:
  6407.874 seconds of real time
  6365.786254 seconds of total run time (6342.519791 user, 23.266463 system)
  [ Run times consist of 336.389 seconds GC time, and 6029.398 seconds non-GC time. ]
  99.34% CPU
  37 lambdas converted
  10,275,693,305,137 processor cycles
  917,869,469,024 bytes consed
  
Evaluation took:
  6499.840 seconds of real time
  6459.652984 seconds of total run time (6437.243391 user, 22.409593 system)
  [ Run times consist of 343.593 seconds GC time, and 6116.060 seconds non-GC time. ]
  99.38% CPU
  37 lambdas converted
  10,423,163,707,496 processor cycles
  917,865,545,952 bytes consed
  
Evaluation took:
  6462.906 seconds of real time
  6440.554888 seconds of total run time (6417.187440 user, 23.367448 system)
  [ Run times consist of 339.733 seconds GC time, and 6100.822 seconds non-GC time. ]
  99.65% CPU
  37 lambdas converted
  10,363,945,724,495 processor cycles
  917,883,036,320 bytes consed
  
Evaluation took:
  6441.121 seconds of real time
  6417.990317 seconds of total run time (6395.315764 user, 22.674553 system)
  [ Run times consist of 343.662 seconds GC time, and 6074.329 seconds non-GC time. ]
  99.64% CPU
  37 lambdas converted
  10,329,091,397,664 processor cycles
  917,872,091,824 bytes consed
  
Evaluation took:
  6451.665 seconds of real time
  6427.815822 seconds of total run time (6404.225409 user, 23.590413 system)
  [ Run times consist of 331.277 seconds GC time, and 6096.539 seconds non-GC time. ]
  99.63% CPU
  37 lambdas converted
  10,346,029,825,274 processor cycles
  917,875,677,904 bytes consed
  
Evaluation took:
  6464.980 seconds of real time
  6446.504982 seconds of total run time (6423.209524 user, 23.295458 system)
  [ Run times consist of 335.867 seconds GC time, and 6110.638 seconds non-GC time. ]
  99.71% CPU
  37 lambdas converted
  10,367,313,908,051 processor cycles
  917,854,514,560 bytes consed
  
Evaluation took:
  6572.321 seconds of real time
  6545.376952 seconds of total run time (6521.194628 user, 24.182324 system)
  [ Run times consist of 320.602 seconds GC time, and 6224.775 seconds non-GC time. ]
  99.59% CPU
  37 lambdas converted
  10,539,411,761,282 processor cycles
  917,865,153,248 bytes consed
  
Evaluation took:
  6552.265 seconds of real time
  6530.065279 seconds of total run time (6507.288742 user, 22.776537 system)
  [ Run times consist of 340.209 seconds GC time, and 6189.857 seconds non-GC time. ]
  99.66% CPU
  37 lambdas converted
  10,507,310,667,648 processor cycles
  917,848,438,064 bytes consed
  
Evaluation took:
  6637.930 seconds of real time
  6606.432670 seconds of total run time (6583.389173 user, 23.043497 system)
  [ Run times consist of 314.391 seconds GC time, and 6292.042 seconds non-GC time. ]
  99.53% CPU
  37 lambdas converted
  10,644,612,470,627 processor cycles
  917,880,407,840 bytes consed
  
Evaluation took:
  6623.448 seconds of real time
  6614.994367 seconds of total run time (6591.817891 user, 23.176476 system)
  [ Run times consist of 351.105 seconds GC time, and 6263.890 seconds non-GC time. ]
  99.87% CPU
  37 lambdas converted
  10,621,368,978,613 processor cycles
  917,872,444,096 bytes consed
  
