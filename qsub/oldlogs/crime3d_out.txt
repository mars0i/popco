start: Fri Feb 15 11:52:27 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d/RUN877749365.csv"
start:  15 11:52:41 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
OutpuThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE,This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d/RUN904131981.csv"
, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d/RUN320300992.csv"

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
start:  15 11:53:11 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0n 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routinThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....
using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....
netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d/RUN041046820.csv"

(P19 P18 P17 P16 P15 P14 P13 P12 P1This is SBCL 1.1.3, an implemThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marsha
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d/RUN843863258.csv"
ting analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d/RUN889896237.csv"
start: Fri Feb 15 11:54:11 CST 2013
This is SBCL 1.1.3, an implemThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; LoadinThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routin.
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d/RUN626743762.csv"
  Load 1 ASDF system:
    cl-ppcre
; LoadinThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d/RUN943063464.csv"
989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d/RUN075771927.csv"
rson ....

(P19 P18 P17 P16 PThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE,This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMPThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, Eimp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
OutpuThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco ticThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE,This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMPThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE,This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popcThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using GThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d/RUN510622002.csv"
start: Fri Feb 15 11:57:41 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
start: " 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d/RUN966262380.csv"
start:  15 11:58:11 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; LoadinThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d/RUN137771230.csv"
ation.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000rmation about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d/RUN913482172.csv"
start: Fri Feb 15 12:00:41 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorpThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorpThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d/RUN154440189.csv"
start: Fri Feb 15 12:02:11 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d/RUN506968545.csv"
a/crime3/d/RUN099943934.csv"
start: Fri Feb 15 12:37:56 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorpThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d/RUN907895This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d/RUN448518403.csv"
start: Fri Feb 15 12:40:11 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d/RUN440482693.csv"
Evaluation took:
  2425.576 seconds of real time
  2423.008647 seconds of total run time (2415.494789 user, 7.513858 system)
  [ Run times consist of 99.008 seconds GC time, and 2324.001 seconds non-GC time. ]
  99.89% CPU
  37 lambdas converted
  6,452,437,023,351 processor cycles
  833,496,094,752 bytes consed
  
end: Fri Feb 15 13:19:13 CST 2013
start: Fri Feb 15 13:19:26 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d/RUN022104654.csv"
Evaluation took:
  5734.622 seconds of real time
  5707.525324 seconds of total run time (5686.318548 user, 21.206776 system)
  [ Run times consist of 299.377 seconds GC time, and 5408.149 seconds non-GC time. ]
  99.53% CPU
  37 lambdas converted
  9,196,125,856,867 processor cycles
  833,496,190,176 bytes consed
  
end: Fri Feb 15 13:28:06 CST 2013
start: Fri Feb 15 13:28:11 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/d/RUN434190953.csv"
Evaluation took:
  5794.711 seconds of real time
  5762.094029 seconds of total run time (5739.660439 user, 22.433590 system)
  [ Run times consist of 289.928 seconds GC time, and 5472.167 seconds non-GC time. ]
  99.44% CPU
  37 lambdas converted
  9,292,404,339,229 processor cycles
  833,489,992,528 bytes consed
  
end: Fri Feb 15 13:29:06 CST 2013
Evaluation took:
  5778.554 seconds of real time
  5759.249461 seconds of total run time (5738.097677 user, 21.151784 system)
  [ Run times consist of 292.698 seconds GC time, and 5466.552 seconds non-GC time. ]
  99.67% CPU
  37 lambdas converted
  9,266,672,003,062 processor cycles
  833,488,580,976 bytes consed
  
end: Fri Feb 15 13:29:34 CST 2013
Evaluation took:
  5794.301 seconds of real time
  5741.603144 seconds of total run time (5720.619334 user, 20.983810 system)
  [ Run times consist of 300.257 seconds GC time, and 5441.347 seconds non-GC time. ]
  99.09% CPU
  37 lambdas converted
  9,291,746,368,804 processor cycles
  833,486,983,360 bytes consed
  
end: Fri Feb 15 13:29:35 CST 2013
Evaluation took:
  5781.954 seconds of real time
  5751.651616 seconds of total run time (5730.565822 user, 21.085794 system)
  [ Run times consist of 301.875 seconds GC time, and 5449.777 seconds non-GC time. ]
  99.48% CPU
  37 lambdas converted
  9,272,040,866,059 processor cycles
  833,488,596,112 bytes consed
  
end: Fri Feb 15 13:29:37 CST 2013
Evaluation took:
  5799.114 seconds of real time
  5775.698961 seconds of total run time (5754.113242 user, 21.585719 system)
  [ Run times consist of 300.997 seconds GC time, and 5474.702 seconds non-GC time. ]
  99.60% CPU
  37 lambdas converted
  9,299,524,898,643 processor cycles
  833,497,026,416 bytes consed
  
end: Fri Feb 15 13:29:39 CST 2013
Evaluation took:
  5834.293 seconds of real time
  5800.058257 seconds of total run time (5778.357556 user, 21.700701 system)
  [ Run times consist of 297.118 seconds GC time, and 5502.941 seconds non-GC time. ]
  99.41% CPU
  37 lambdas converted
  9,355,940,647,251 processor cycles
  833,488,813,056 bytes consed
  
end: Fri Feb 15 13:29:46 CST 2013
Evaluation took:
  5837.744 seconds of real time
  5813.630194 seconds of total run time (5792.812358 user, 20.817836 system)
  [ Run times consist of 299.052 seconds GC time, and 5514.579 seconds non-GC time. ]
  99.59% CPU
  37 lambdas converted
  9,361,543,686,295 processor cycles
  833,481,839,440 bytes consed
  
end: Fri Feb 15 13:29:49 CST 2013
Evaluation took:
  5823.006 seconds of real time
  5796.206843 seconds of total run time (5774.292174 user, 21.914669 system)
  [ Run times consist of 310.352 seconds GC time, and 5485.855 seconds non-GC time. ]
  99.54% CPU
  37 lambdas converted
  9,337,872,665,477 processor cycles
  833,501,031,536 bytes consed
  
end: Fri Feb 15 13:30:03 CST 2013
Evaluation took:
  5782.441 seconds of real time
  5758.758535 seconds of total run time (5736.867863 user, 21.890672 system)
  [ Run times consist of 287.617 seconds GC time, and 5471.142 seconds non-GC time. ]
  99.59% CPU
  37 lambdas converted
  9,272,900,109,426 processor cycles
  833,482,221,552 bytes consed
  
end: Fri Feb 15 13:30:08 CST 2013
Evaluation took:
  5790.004 seconds of real time
  5763.678787 seconds of total run time (5741.973087 user, 21.705700 system)
  [ Run times consist of 303.273 seconds GC time, and 5460.406 seconds non-GC time. ]
  99.55% CPU
  37 lambdas converted
  9,284,975,711,327 processor cycles
  833,487,872,432 bytes consed
  
end: Fri Feb 15 13:30:15 CST 2013
Evaluation took:
  5791.144 seconds of real time
  5758.320602 seconds of total run time (5736.392935 user, 21.927667 system)
  [ Run times consist of 302.258 seconds GC time, and 5456.063 seconds non-GC time. ]
  99.43% CPU
  37 lambdas converted
  9,286,824,040,576 processor cycles
  833,488,185,136 bytes consed
  
end: Fri Feb 15 13:30:17 CST 2013
Evaluation took:
  5773.173 seconds of real time
  5751.869582 seconds of total run time (5730.959761 user, 20.909821 system)
  [ Run times consist of 301.850 seconds GC time, and 5450.020 seconds non-GC time. ]
  99.63% CPU
  37 lambdas converted
  9,257,958,747,103 processor cycles
  833,495,217,952 bytes consed
  
end: Fri Feb 15 13:30:28 CST 2013
Evaluation took:
  5787.515 seconds of real time
  5752.889428 seconds of total run time (5731.427691 user, 21.461737 system)
  [ Run times consist of 300.752 seconds GC time, and 5452.138 seconds non-GC time. ]
  99.40% CPU
  37 lambdas converted
  9,280,946,236,332 processor cycles
  833,487,033,776 bytes consed
  
end: Fri Feb 15 13:30:28 CST 2013
Evaluation took:
  5847.481 seconds of real time
  5821.062064 seconds of total run time (5799.465347 user, 21.596717 system)
  [ Run times consist of 288.136 seconds GC time, and 5532.927 seconds non-GC time. ]
  99.55% CPU
  37 lambdas converted
  9,377,027,189,428 processor cycles
  833,489,281,520 bytes consed
  
end: Fri Feb 15 13:30:43 CST 2013
Evaluation took:
  5847.706 seconds of real time
  5807.692097 seconds of total run time (5784.886564 user, 22.805533 system)
  [ Run times consist of 292.478 seconds GC time, and 5515.215 seconds non-GC time. ]
  99.32% CPU
  37 lambdas converted
  9,377,363,042,985 processor cycles
  833,495,862,144 bytes consed
  
end: Fri Feb 15 13:30:43 CST 2013
Evaluation took:
  5829.080 seconds of real time
  5799.495342 seconds of total run time (5778.204579 user, 21.290763 system)
  [ Run times consist of 296.072 seconds GC time, and 5503.424 seconds non-GC time. ]
  99.49% CPU
  37 lambdas converted
  9,347,563,612,661 processor cycles
  833,490,713,728 bytes consed
  
end: Fri Feb 15 13:30:45 CST 2013
Evaluation took:
  5869.011 seconds of real time
  5827.494087 seconds of total run time (5805.803384 user, 21.690703 system)
  [ Run times consist of 290.748 seconds GC time, and 5536.747 seconds non-GC time. ]
  99.29% CPU
  37 lambdas converted
  9,411,725,706,635 processor cycles
  833,490,409,280 bytes consed
  
end: Fri Feb 15 13:30:49 CST 2013
Evaluation took:
  5884.494 seconds of real time
  5852.818236 seconds of total run time (5832.010400 user, 20.807836 system)
  [ Run times consist of 296.297 seconds GC time, and 5556.522 seconds non-GC time. ]
  99.46% CPU
  37 lambdas converted
  9,436,461,600,847 processor cycles
  833,492,576,928 bytes consed
  
end: Fri Feb 15 13:30:50 CST 2013
Evaluation took:
  5800.903 seconds of real time
  5773.316322 seconds of total run time (5751.533634 user, 21.782688 system)
  [ Run times consist of 301.465 seconds GC time, and 5471.852 seconds non-GC time. ]
  99.52% CPU
  37 lambdas converted
  9,302,502,223,419 processor cycles
  833,483,279,760 bytes consed
  
end: Fri Feb 15 13:30:56 CST 2013
Evaluation took:
  5843.644 seconds of real time
  5801.626018 seconds of total run time (5780.268265 user, 21.357753 system)
  [ Run times consist of 305.385 seconds GC time, and 5496.242 seconds non-GC time. ]
  99.28% CPU
  37 lambdas converted
  9,370,936,637,333 processor cycles
  833,494,936,928 bytes consed
  
end: Fri Feb 15 13:31:00 CST 2013
Evaluation took:
  5789.715 seconds of real time
  5764.419675 seconds of total run time (5743.424867 user, 20.994808 system)
  [ Run times consist of 301.455 seconds GC time, and 5462.965 seconds non-GC time. ]
  99.56% CPU
  37 lambdas converted
  9,284,450,548,303 processor cycles
  833,497,221,712 bytes consed
  
end: Fri Feb 15 13:31:00 CST 2013
Evaluation took:
  5868.037 seconds of real time
  5841.486960 seconds of total run time (5820.297181 user, 21.189779 system)
  [ Run times consist of 310.722 seconds GC time, and 5530.765 seconds non-GC time. ]
  99.55% CPU
  37 lambdas converted
  9,409,989,966,567 processor cycles
  833,494,481,584 bytes consed
  
end: Fri Feb 15 13:31:03 CST 2013
Evaluation took:
  5775.478 seconds of real time
  5749.040012 seconds of total run time (5727.697257 user, 21.342755 system)
  [ Run times consist of 289.006 seconds GC time, and 5460.035 seconds non-GC time. ]
  99.54% CPU
  37 lambdas converted
  9,261,681,960,867 processor cycles
  833,489,493,888 bytes consed
  
end: Fri Feb 15 13:31:04 CST 2013
Evaluation took:
  5779.538 seconds of real time
  5752.547481 seconds of total run time (5731.912617 user, 20.634864 system)
  [ Run times consist of 314.044 seconds GC time, and 5438.504 seconds non-GC time. ]
  99.53% CPU
  37 lambdas converted
  9,268,132,446,429 processor cycles
  833,487,322,560 bytes consed
  
end: Fri Feb 15 13:31:06 CST 2013
Evaluation took:
  5885.944 seconds of real time
  5847.310074 seconds of total run time (5824.836490 user, 22.473584 system)
  [ Run times consist of 300.059 seconds GC time, and 5547.252 seconds non-GC time. ]
  99.34% CPU
  37 lambdas converted
  9,438,754,601,858 processor cycles
  833,480,930,624 bytes consed
  
end: Fri Feb 15 13:31:06 CST 2013
Evaluation took:
  5825.368 seconds of real time
  5798.496495 seconds of total run time (5777.512685 user, 20.983810 system)
  [ Run times consist of 297.269 seconds GC time, and 5501.228 seconds non-GC time. ]
  99.54% CPU
  37 lambdas converted
  9,341,649,172,497 processor cycles
  833,481,090,768 bytes consed
  
end: Fri Feb 15 13:31:06 CST 2013
Evaluation took:
  5841.470 seconds of real time
  5805.499429 seconds of total run time (5783.345797 user, 22.153632 system)
  [ Run times consist of 300.437 seconds GC time, and 5505.063 seconds non-GC time. ]
  99.38% CPU
  37 lambdas converted
  9,367,481,561,009 processor cycles
  833,473,448,064 bytes consed
  
end: Fri Feb 15 13:31:07 CST 2013
Evaluation took:
  5880.091 seconds of real time
  5856.916613 seconds of total run time (5835.357890 user, 21.558723 system)
  [ Run times consist of 297.765 seconds GC time, and 5559.152 seconds non-GC time. ]
  99.61% CPU
  37 lambdas converted
  9,429,558,963,233 processor cycles
  833,482,305,936 bytes consed
  
end: Fri Feb 15 13:31:15 CST 2013
Evaluation took:
  5834.521 seconds of real time
  5803.455741 seconds of total run time (5781.361100 user, 22.094641 system)
  [ Run times consist of 295.765 seconds GC time, and 5507.691 seconds non-GC time. ]
  99.47% CPU
  37 lambdas converted
  9,356,294,388,571 processor cycles
  833,501,679,296 bytes consed
  
end: Fri Feb 15 13:31:15 CST 2013
Evaluation took:
  5914.348 seconds of real time
  5876.967566 seconds of total run time (5855.050897 user, 21.916669 system)
  [ Run times consist of 312.809 seconds GC time, and 5564.159 seconds non-GC time. ]
  99.37% CPU
  37 lambdas converted
  9,484,284,407,292 processor cycles
  833,487,825,952 bytes consed
  
end: Fri Feb 15 13:31:21 CST 2013
Evaluation took:
  5885.959 seconds of real time
  5854.599965 seconds of total run time (5833.308202 user, 21.291763 system)
  [ Run times consist of 311.220 seconds GC time, and 5543.380 seconds non-GC time. ]
  99.47% CPU
  37 lambdas converted
  9,438,854,260,560 processor cycles
  833,499,934,032 bytes consed
  
end: Fri Feb 15 13:31:21 CST 2013
Evaluation took:
  5887.406 seconds of real time
  5861.975844 seconds of total run time (5839.850208 user, 22.125636 system)
  [ Run times consist of 304.139 seconds GC time, and 5557.837 seconds non-GC time. ]
  99.57% CPU
  37 lambdas converted
  9,441,071,774,193 processor cycles
  833,484,016,368 bytes consed
  
end: Fri Feb 15 13:31:23 CST 2013
Evaluation took:
  5860.393 seconds of real time
  5832.419338 seconds of total run time (5811.294549 user, 21.124789 system)
  [ Run times consist of 287.343 seconds GC time, and 5545.077 seconds non-GC time. ]
  99.52% CPU
  37 lambdas converted
  9,397,732,701,114 processor cycles
  833,483,396,688 bytes consed
  
Evaluation took:
  5870.329 seconds of real time
  5844.781458 seconds of total run time (5822.822796 user, 21.958662 system)
  [ Run times consist of 297.738 seconds GC time, and 5547.044 seconds non-GC time. ]
  99.56% CPU
  37 lambdas converted
  9,413,865,121,795 processor cycles
  833,485,410,608 bytes consed
  
end: Fri Feb 15 13:31:27 CST 2013
Fri Feb 15 13:31:27 CST 2013
Evaluation took:
  5846.390 seconds of real time
  5811.167567 seconds of total run time (5789.929796 user, 21.237771 system)
  [ Run times consist of 294.980 seconds GC time, and 5516.188 seconds non-GC time. ]
  99.40% CPU
  37 lambdas converted
  9,375,348,431,565 processor cycles
  833,501,560,256 bytes consed
  
end: Fri Feb 15 13:31:28 CST 2013
Evaluation took:
  5785.662 seconds of real time
  5756.066945 seconds of total run time (5734.983150 user, 21.083795 system)
  [ Run times consist of 304.182 seconds GC time, and 5451.885 seconds non-GC time. ]
  99.49% CPU
  37 lambdas converted
  9,277,963,768,249 processor cycles
  833,490,103,776 bytes consed
  
end: Fri Feb 15 13:31:29 CST 2013
end: Fri Feb 15 13:31:30 CST 2013
Evaluation took:
  5874.025 seconds of real time
  5839.038332 seconds of total run time (5817.268641 user, 21.769691 system)
  [ Run times consist of 301.821 seconds GC time, and 5537.218 seconds non-GC time. ]
  99.40% CPU
  37 lambdas converted
  9,419,593,435,270 processor cycles
  833,490,533,952 bytes consed
  
end: Fri Feb 15 13:31:30 CST 2013
Evaluation took:
  5900.400 seconds of real time
  5865.849255 seconds of total run time (5844.813453 user, 21.035802 system)
  [ Run times consist of 318.963 seconds GC time, and 5546.887 seconds non-GC time. ]
  99.41% CPU
  37 lambdas converted
  9,461,909,169,859 processor cycles
  833,485,899,584 bytes consed
  
end: Fri Feb 15 13:31:35 CST 2013
Evaluation took:
  5916.386 seconds of real time
  5880.487029 seconds of total run time (5858.837321 user, 21.649708 system)
  [ Run times consist of 299.075 seconds GC time, and 5581.413 seconds non-GC time. ]
  99.39% CPU
  37 lambdas converted
  9,487,613,720,219 processor cycles
  833,482,178,928 bytes consed
  
end: Fri Feb 15 13:31:37 CST 2013
Evaluation took:
  5912.768 seconds of real time
  5885.496268 seconds of total run time (5863.696582 user, 21.799686 system)
  [ Run times consist of 311.139 seconds GC time, and 5574.358 seconds non-GC time. ]
  99.54% CPU
  37 lambdas converted
  9,481,777,326,968 processor cycles
  833,488,546,992 bytes consed
  
EvaluFri Feb 15 13:31:48 CST 2013
s of real time
  5862.284797 seconds of total run time (5841.157009 user, 21.127788 system)
  [ Run times consist of 309.394 seconds GC time, and 5552.891 seconds non-GC time. ]
  99.50% CPU
  37 lambdas converted
  9,448,021,631,131 processor cycles
  833,487,213,072 bytes consed
  
end: Fri Feb 15 13:31:48 CST 2013
Evaluation took:
  5798.151 seconds of real time
  5757.836676 seconds of total run time (5736.226961 user, 21.609715 system)
  [ Run times consist of 296.445 seconds GC time, and 5461.392 seconds non-GC time. ]
  99.30% CPU
  37 lambdas converted
  9,297,966,903,815 processor cycles
  833,490,188,864 bytes consed
  
end: Fri Feb 15 13:31:53 CST 2013
Evaluation took:
  5840.572 seconds of real time
  5815.441918 seconds of total run time (5793.659230 user, 21.782688 system)
  [ Run times consist of 294.022 seconds GC time, and 5521.420 seconds non-GC time. ]
  99.57% CPU
  37 lambdas converted
  9,365,989,434,303 processor cycles
  833,500,540,816 bytes consed
  
end: Fri Feb 15 13:31:54 CST 2013
Evaluation took:
  5899.719 seconds of real time
  5872.926180 seconds of total run time (5851.472441 user, 21.453739 system)
  [ Run times consist of 310.556 seconds GC time, and 5562.371 seconds non-GC time. ]
  99.55% CPU
  37 lambdas converted
  9,460,837,931,230 processor cycles
  833,501,670,112 bytes consed
  
end: Fri Feb 15 13:31:55 CST 2013
end: Fri Feb 15 13:31:56 CST 2013
Evaluation took:
  5956.489 seconds of real time
  5914.998784 seconds of total run time (5892.390221 user, 22.608563 system)
  [ Run times consist of 317.316 seconds GC time, and 5597.683 seconds non-GC time. ]
  99.30% CPU
  37 lambdas converted
  9,551,841,660,686 processor cycles
  833,487,976,144 bytes consed
  
end: Fri Feb 15 13:32:02 CST 2013
Evaluation took:
  5928.223 seconds of real time
  5899.258176 seconds of total run time (5878.773290 user, 20.484886 system)
  [ Run times consist of 322.680 seconds GC time, and 5576.579 seconds non-GC time. ]
  99.51% CPU
  37 lambdas converted
  9,506,568,150,665 processor cycles
  833,499,089,824 bytes consed
  
end: Fri Feb 15 13:32:04 CST 2013
Evaluation took:
  5958.782 seconds of real time
  5931.207319 seconds of total run time (5909.545612 user, 21.661707 system)
  [ Run times consist of 296.133 seconds GC time, and 5635.075 seconds non-GC time. ]
  99.54% CPU
  37 lambdas converted
  9,555,593,905,029 processor cycles
  833,488,960,800 bytes consed
  
end: Fri Feb 15 13:32:05 CST 2013
Evaluation took:
  5872.851 seconds of real time
  5843.362674 seconds of total run time (5821.413011 user, 21.949663 system)
  [ Run times consist of 310.770 seconds GC time, and 5532.593 seconds non-GC time. ]
  99.50% CPU
  37 lambdas converted
  9,417,755,138,255 processor cycles
  833,491,662,592 bytes consed
  
end: Fri Feb 15 13:32:09 CST 2013
Evaluation took:
  5857.821 seconds of real time
  5821.813950 seconds of total run time (5800.544183 user, 21.269767 system)
  [ Run times consist of 302.746 seconds GC time, and 5519.068 seconds non-GC time. ]
  99.39% CPU
  37 lambdas converted
  9,393,786,644,653 processor cycles
  833,489,546,160 bytes consed
  
end: Fri Feb 15 13:32:12 CST 2013
Evaluation took:
  5891.372 seconds of real time
  5852.047354 seconds of total run time (5830.234670 user, 21.812684 system)
  [ Run times consist of 296.764 seconds GC time, and 5555.284 seconds non-GC time. ]
  99.33% CPU
  37 lambdas converted
  9,447,424,191,709 processor cycles
  833,489,441,088 bytes consed
  
end: eb 15 13:32:14 CST 2013
Fri Feb 15 13:32:15 CST 2013
Evaluation took:
  5863.131 seconds of real time
  5823.289726 seconds of total run time (5801.346062 user, 21.943664 system)
  [ Run times consist of 315.061 seconds GC time, and 5508.229 seconds non-GC time. ]
  99.32% CPU
  37 lambdas converted
  9,402,272,581,552 processor cycles
  833,493,207,728 bytes consed
  
end: Fri Feb 15 13:32:16 CST 2013
Evaluation took:
  5811.284 seconds of real time
  5780.822182 seconds of total run time (5759.882365 user, 20.939817 system)
  [ Run times consist of 298.290 seconds GC time, and 5482.533 seconds non-GC time. ]
  99.48% CPU
  37 lambdas converted
  9,319,177,760,780 processor cycles
  833,477,570,928 bytes consed
  
end: Fri Feb 15 13:32:21 CST 2013
Evaluation took:
  5887.101 seconds of real time
  5854.096041 seconds of total run time (5832.176374 user, 21.919667 system)
  [ Run times consist of 309.698 seconds GC time, and 5544.399 seconds non-GC time. ]
  99.44% CPU
  37 lambdas converted
  9,440,578,890,256 processor cycles
  833,483,433,136 bytes consed
  
end: Fri Feb 15 13:32:23 CST 2013
Evaluation took:
  5930.153 seconds of real time
  5892.357225 seconds of total run time (5864.586447 user, 27.770778 system)
  [ Run times consist of 306.386 seconds GC time, and 5585.972 seconds non-GC time. ]
  99.36% CPU
  37 lambdas converted
  9,509,636,696,434 processor cycles
  833,480,560,800 bytes consed
  
end: ation took:
  5906.143 seconds of real time
  5872.408259 seconds of total run time (5851.093499 user, 21.314760 system)
  [ Run times consist of 303.990 seconds GC time, and 5568.419 seconds non-GC time. ]
  99.43% CPU
  37 lambdas converted
  9,471,126,628,072 processor cycles
  833,485,780,464 bytes consed
  
end: eb 15 13:32:27 CST 2013
Fri Feb 15 13:32:27 CST 2013
Fri Feb 15 13:32:27 CST 2013
Evaluation took:
  5931.752 seconds of real time
  5905.398243 seconds of total run time (5883.775530 user, 21.622713 system)
  [ Run times consist of 299.565 seconds GC time, and 5605.834 seconds non-GC time. ]
  99.56% CPU
  37 lambdas converted
  9,512,148,958,546 processor cycles
  833,477,303,024 bytes consed
  
end: Fri Feb 15 13:32:28 CST 2013
Evaluation took:
  5936.287 seconds of real time
  5909.736583 seconds of total run time (5887.980890 user, 21.755693 system)
  [ Run times consist of 309.759 seconds GC time, and 5599.978 seconds non-GC time. ]
  99.55% CPU
  37 lambdas converted
  9,519,519,008,043 processor cycles
  833,475,320,176 bytes consed
  
end: ation took:
  5838.069 seconds of real time
  5810.099731 seconds of total run time (5789.250900 user, 20.848831 system)
  [ Run times consist of 303.272 seconds GC time, and 5506.828 seconds non-GC time. ]
  99.52% CPU
  37 lambdas converted
  9,361,953,682,027 processor cycles
  833,482,239,024 bytes consed
  
end: ation took:
  5910.519 seconds of real time
  5879.819131 seconds of total run time (5858.439382 user, 21.379749 system)
  [ Run times consist of 295.107 seconds GC time, and 5584.713 seconds non-GC time. ]
  99.48% CPU
  37 lambdas converted
  9,478,151,255,923 processor cycles
  833,487,584,528 bytes consed
  
end: eb 15 13:32:34 CST 2013
Fri Feb 15 13:32:34 CST 2013
Evaluation took:
  5930.865 seconds of real time
  5905.464232 seconds of total run time (5883.577560 user, 21.886672 system)
  [ Run times consist of 319.532 seconds GC time, and 5585.933 seconds non-GC time. ]
  99.57% CPU
  37 lambdas converted
  9,510,797,820,343 processor cycles
  833,486,645,552 bytes consed
  
end: Fri Feb 15 13:32:36 CST 2013
Evaluation took:
  5829.706 seconds of real time
  5801.441046 seconds of total run time (5780.356252 user, 21.084794 system)
  [ Run times consist of 297.595 seconds GC time, and 5503.847 seconds non-GC time. ]
  99.52% CPU
  37 lambdas converted
  9,348,532,739,921 processor cycles
  833,485,861,824 bytes consed
  
end: Fri Feb 15 13:32:40 CST 2013
Evaluation took:
  5836.968 seconds of real time
  5810.571659 seconds of total run time (5788.881956 user, 21.689703 system)
  [ Run times consist of 306.738 seconds GC time, and 5503.834 seconds non-GC time. ]
  99.55% CPU
  37 lambdas converted
  9,360,247,275,732 processor cycles
  833,486,316,496 bytes consed
  
end: Fri Feb 15 13:32:47 CST 2013
Evaluation took:
  5824.584 seconds of real time
  5795.087013 seconds of total run time (5773.672269 user, 21.414744 system)
  [ Run times consist of 305.497 seconds GC time, and 5489.591 seconds non-GC time. ]
  99.49% CPU
  37 lambdas converted
  9,340,285,788,093 processor cycles
  833,489,851,984 bytes consed
  
end: Fri Feb 15 13:32:53 CST 2013
Evaluation took:
  5873.432 seconds of real time
  5841.711925 seconds of total run time (5819.315329 user, 22.396596 system)
  [ Run times consist of 299.025 seconds GC time, and 5542.687 seconds non-GC time. ]
  99.46% CPU
  37 lambdas converted
  9,418,661,133,960 processor cycles
  833,492,510,640 bytes consed
  
end: Fri Feb 15 13:32:57 CST 2013
Evaluation took:
  5861.995 seconds of real time
  5837.385582 seconds of total run time (5815.630890 user, 21.754692 system)
  [ Run times consist of 298.137 seconds GC time, and 5539.249 seconds non-GC time. ]
  99.58% CPU
  37 lambdas converted
  9,400,421,682,684 processor cycles
  833,494,216,704 bytes consed
  
end: Fri Feb 15 13:32:57 CST 2013
Evaluation took:
  5941.510 seconds of real time
  5906.286107 seconds of total run time (5884.511418 user, 21.774689 system)
  [ Run times consist of 311.193 seconds GC time, and 5595.094 seconds non-GC time. ]
  99.41% CPU
  37 lambdas converted
  9,527,965,176,431 processor cycles
  833,493,623,312 bytes consed
  
end: Fri Feb 15 13:33:04 CST 2013
Evaluation took:
  5998.484 seconds of real time
  5954.881720 seconds of total run time (5933.166022 user, 21.715698 system)
  [ Run times consist of 304.148 seconds GC time, and 5650.734 seconds non-GC time. ]
  99.27% CPU
  37 lambdas converted
  9,619,258,390,760 processor cycles
  833,495,237,904 bytes consed
  
end: Fri Feb 15 13:33:14 CST 2013
Evaluation took:
  5959.775 seconds of real time
  5934.843767 seconds of total run time (5913.056079 user, 21.787688 system)
  [ Run times consist of 312.063 seconds GC time, and 5622.781 seconds non-GC time. ]
  99.58% CPU
  37 lambdas converted
  9,557,161,291,415 processor cycles
  833,484,325,504 bytes consed
  
end: Fri Feb 15 13:33:21 CST 2013
Evaluation took:
  5937.785 seconds of real time
  5902.961614 seconds of total run time (5881.429887 user, 21.531727 system)
  [ Run times consist of 315.435 seconds GC time, and 5587.527 seconds non-GC time. ]
  99.41% CPU
  37 lambdas converted
  9,521,837,474,958 processor cycles
  833,485,354,176 bytes consed
  
end: Fri Feb 15 13:33:32 CST 2013
Evaluation took:
  5899.527 seconds of real time
  5863.837561 seconds of total run time (5843.032724 user, 20.804837 system)
  [ Run times consist of 298.141 seconds GC time, and 5565.697 seconds non-GC time. ]
  99.40% CPU
  37 lambdas converted
  9,460,501,315,770 processor cycles
  833,481,021,536 bytes consed
  
end: Fri Feb 15 13:33:50 CST 2013
Evaluation took:
  5933.911 seconds of real time
  5900.546980 seconds of total run time (5879.248218 user, 21.298762 system)
  [ Run times consist of 299.302 seconds GC time, and 5601.245 seconds non-GC time. ]
  99.44% CPU
  37 lambdas converted
  9,515,759,610,081 processor cycles
  833,482,211,808 bytes consed
  
end: Fri Feb 15 13:33:58 CST 2013
Evaluation took:
  5969.090 seconds of real time
  5938.478214 seconds of total run time (5916.521552 user, 21.956662 system)
  [ Run times consist of 305.660 seconds GC time, and 5632.819 seconds non-GC time. ]
  99.49% CPU
  37 lambdas converted
  9,572,092,206,190 processor cycles
  833,485,060,560 bytes consed
  
end: Fri Feb 15 13:34:01 CST 2013
Evaluation took:
  5867.907 seconds of real time
  5833.646150 seconds of total run time (5811.783474 user, 21.862676 system)
  [ Run times consist of 317.538 seconds GC time, and 5516.109 seconds non-GC time. ]
  99.42% CPU
  37 lambdas converted
  9,409,922,714,064 processor cycles
  833,483,081,792 bytes consed
  
end: Fri Feb 15 13:34:03 CST 2013
Evaluation took:
  5979.182 seconds of real time
  5931.120332 seconds of total run time (5909.575607 user, 21.544725 system)
  [ Run times consist of 301.719 seconds GC time, and 5629.402 seconds non-GC time. ]
  99.20% CPU
  37 lambdas converted
  9,588,298,446,500 processor cycles
  833,477,991,376 bytes consed
  
end: Fri Feb 15 13:34:11 CST 2013
Evaluation took:
  5929.386 seconds of real time
  5904.908317 seconds of total run time (5882.833673 user, 22.074644 system)
  [ Run times consist of 307.419 seconds GC time, and 5597.490 seconds non-GC time. ]
  99.59% CPU
  37 lambdas converted
  9,508,482,244,518 processor cycles
  833,486,559,984 bytes consed
  
end: Fri Feb 15 13:34:21 CST 2013
Evaluation took:
  6024.757 seconds of real time
  5989.493458 seconds of total run time (5966.970882 user, 22.522576 system)
  [ Run times consist of 323.946 seconds GC time, and 5665.548 seconds non-GC time. ]
  99.41% CPU
  37 lambdas converted
  9,661,384,095,847 processor cycles
  833,490,003,840 bytes consed
  
end: Fri Feb 15 13:34:40 CST 2013
Evaluation took:
  6013.063 seconds of real time
  5986.088977 seconds of total run time (5963.912348 user, 22.176629 system)
  [ Run times consist of 326.630 seconds GC time, and 5659.459 seconds non-GC time. ]
  99.55% CPU
  37 lambdas converted
  9,642,651,283,813 processor cycles
  833,489,010,800 bytes consed
  
end: Fri Feb 15 13:35:18 CST 2013
Evaluation took:
  6044.868 seconds of real time
  6015.106565 seconds of total run time (5991.775112 user, 23.331453 system)
  [ Run times consist of 320.677 seconds GC time, and 5694.430 seconds non-GC time. ]
  99.51% CPU
  37 lambdas converted
  9,693,731,095,870 processor cycles
  833,494,042,800 bytes consed
  
end: Fri Feb 15 13:39:00 CST 2013
Evaluation took:
  6072.089 seconds of real time
  6040.649682 seconds of total run time (6018.494050 user, 22.155632 system)
  [ Run times consist of 316.843 seconds GC time, and 5723.807 seconds non-GC time. ]
  99.48% CPU
  37 lambdas converted
  9,737,428,356,678 processor cycles
  833,492,921,568 bytes consed
  
end: Fri Feb 15 13:39:27 CST 2013
Evaluation took:
  6112.440 seconds of real time
  6082.535315 seconds of total run time (6058.897908 user, 23.637407 system)
  [ Run times consist of 316.851 seconds GC time, and 5765.685 seconds non-GC time. ]
  99.51% CPU
  37 lambdas converted
  9,802,092,354,774 processor cycles
  833,489,140,192 bytes consed
  
end: Fri Feb 15 13:39:39 CST 2013
Evaluation took:
  6099.718 seconds of real time
  6074.596521 seconds of total run time (6050.571173 user, 24.025348 system)
  [ Run times consist of 297.736 seconds GC time, and 5776.861 seconds non-GC time. ]
  99.59% CPU
  37 lambdas converted
  9,781,667,754,238 processor cycles
  833,493,995,808 bytes consed
  
end: Fri Feb 15 13:39:55 CST 2013
Evaluation took:
  6132.832 seconds of real time
  6098.083950 seconds of total run time (6073.494688 user, 24.589262 system)
  [ Run times consist of 325.910 seconds GC time, and 5772.174 seconds non-GC time. ]
  99.43% CPU
  37 lambdas converted
  9,834,839,123,204 processor cycles
  833,484,639,312 bytes consed
  
end: Fri Feb 15 13:40:44 CST 2013
Evaluation took:
  6235.650 seconds of real time
  6201.880172 seconds of total run time (6176.224072 user, 25.656100 system)
  [ Run times consist of 306.528 seconds GC time, and 5895.353 seconds non-GC time. ]
  99.46% CPU
  37 lambdas converted
  9,999,652,418,565 processor cycles
  833,492,492,848 bytes consed
  
end: Fri Feb 15 13:44:41 CST 2013
Evaluation took:
  6348.964 seconds of real time
  6317.732557 seconds of total run time (6291.886487 user, 25.846070 system)
  [ Run times consist of 323.721 seconds GC time, and 5994.012 seconds non-GC time. ]
  99.51% CPU
  37 lambdas converted
  10,181,379,612,688 processor cycles
  833,488,268,640 bytes consed
  
end: Fri Feb 15 13:47:05 CST 2013
Evaluation took:
  6331.645 seconds of real time
  6288.868946 seconds of total run time (6262.769914 user, 26.099032 system)
  [ Run times consist of 324.226 seconds GC time, and 5964.643 seconds non-GC time. ]
  99.32% CPU
  37 lambdas converted
  10,153,605,516,120 processor cycles
  833,487,033,520 bytes consed
  
end: Fri Feb 15 13:47:50 CST 2013
Evaluation took:
  6409.890 seconds of real time
  6378.922257 seconds of total run time (6354.147023 user, 24.775234 system)
  [ Run times consist of 333.161 seconds GC time, and 6045.762 seconds non-GC time. ]
  99.52% CPU
  37 lambdas converted
  10,279,141,290,096 processor cycles
  833,501,724,032 bytes consed
  
end: Fri Feb 15 13:47:53 CST 2013
Evaluation took:
  6375.948 seconds of real time
  6344.725455 seconds of total run time (6317.883536 user, 26.841919 system)
  [ Run times consist of 310.155 seconds GC time, and 6034.571 seconds non-GC time. ]
  99.51% CPU
  37 lambdas converted
  10,224,710,715,386 processor cycles
  833,487,541,744 bytes consed
  
end: Fri Feb 15 13:48:31 CST 2013
Evaluation took:
  2453.912 seconds of real time
  2449.707589 seconds of total run time (2441.797791 user, 7.909798 system)
  [ Run times consist of 106.585 seconds GC time, and 2343.123 seconds non-GC time. ]
  99.83% CPU
  37 lambdas converted
  6,527,814,412,995 processor cycles
  833,492,074,352 bytes consed
  
end: Fri Feb 15 14:00:22 CST 2013
Evaluation took:
  5904.135 seconds of real time
  5879.625161 seconds of total run time (5858.259409 user, 21.365752 system)
  [ Run times consist of 299.462 seconds GC time, and 5580.164 seconds non-GC time. ]
  99.58% CPU
  37 lambdas converted
  9,467,967,158,189 processor cycles
  833,491,080,016 bytes consed
  
end: Fri Feb 15 14:16:26 CST 2013
Evaluation took:
  5900.945 seconds of real time
  5877.666459 seconds of total run time (5855.865773 user, 21.800686 system)
  [ Run times consist of 285.670 seconds GC time, and 5591.997 seconds non-GC time. ]
  99.61% CPU
  37 lambdas converted
  9,462,912,565,001 processor cycles
  833,494,987,280 bytes consed
  
end: Fri Feb 15 14:16:51 CST 2013
Evaluation took:
  5971.969 seconds of real time
  5936.897454 seconds of total run time (5914.291891 user, 22.605563 system)
  [ Run times consist of 329.404 seconds GC time, and 5607.494 seconds non-GC time. ]
  99.41% CPU
  37 lambdas converted
  9,576,752,638,580 processor cycles
  833,490,006,432 bytes consed
  
end: Fri Feb 15 14:19:49 CST 2013
Evaluation took:
  5907.709 seconds of real time
  5883.788528 seconds of total run time (5862.916701 user, 20.871827 system)
  [ Run times consist of 314.086 seconds GC time, and 5569.703 seconds non-GC time. ]
  99.60% CPU
  37 lambdas converted
  9,473,691,637,191 processor cycles
  833,491,467,792 bytes consed
  
end: Fri Feb 15 15:06:43 CST 2013
