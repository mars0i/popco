start: Fri Feb 15 11:06:56 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorpThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 PThis is SBCL 1.1.3, an implemThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/b/RUN630254643.csv"
.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/b/RUN316646802.csv"
a/crime3/b/RUN265041662.csv"
start:  15 11:07:41 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE,This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE,This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/b/RUN812326279.csv"
.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/b/RUN937715943.csv"
ting analogy networks for each person ....

(P19 P18 P17 PThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
ostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE,This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
ostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DEThis is SBCL 1.1.3, an implemThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DE"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To loa"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/b/RUN176555302.csv"
s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/b/RUN233108749.csv"
start:  15 11:08:11 CST 2013
"
This is SBCL 1.1.3, an implemThis is SBCL 1.1.3, an implemThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogoThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/b/RUN125361337.csv"
"acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/b/RUN382531266.csv"
ting analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/b/RUN773763663.csv"
ntensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/b/RUN824385486.csv"

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/b/RUN896853351.csv"
G files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE,This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE,This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE,This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE,This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/b/RUN971140730.csv"
start: Fri Feb 15 11:09:11 CST 2013
This is SBCL 1.1.3, an implemThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE,This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF   Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/b/RUN667136245.csv"
etworks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/b/RUN802177401.csv"
start: Fri Feb 15 11:09:41 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorpThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" 89params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/b/RUN272823731.csv"
start: Fri Feb 15 11:10:26 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/b/RUN604344236.csv"
ting analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/b/RUN053114083.csv"
start: Fri Feb 15 11:10:41 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
start: " 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/b/RUN865559332.csv"
Fri Feb 15 11:10:56 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/b/RUN033500592.csv"
start: Fri Feb 15 11:11:37 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-pThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/b/RUN097742098.csv"
start: Fri Feb 15 11:12:52 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorpThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/b/RUN707074786.csv"
start: Fri Feb 15 11:20:07 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/b/RUN183166223.csv"
Evaluation took:
  1126.489 seconds of real time
  1123.278235 seconds of total run time (1119.298840 user, 3.979395 system)
  [ Run times consist of 43.500 seconds GC time, and 1079.779 seconds non-GC time. ]
  99.71% CPU
  37 lambdas converted
  2,996,648,417,335 processor cycles
  405,171,216,096 bytes consed
  
end: Fri Feb 15 11:38:57 CST 2013
start: Fri Feb 15 11:39:11 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/b/RUN347642603.csv"
Evaluation took:
  2679.321 seconds of real time
  2659.983621 seconds of total run time (2648.604351 user, 11.379270 system)
  [ Run times consist of 133.347 seconds GC time, and 2526.637 seconds non-GC time. ]
  99.28% CPU
  37 lambdas converted
  4,296,603,740,207 processor cycles
  405,164,210,016 bytes consed
  
end: Fri Feb 15 11:51:54 CST 2013
Evaluation took:
  2680.765 seconds of real time
  2666.553622 seconds of total run time (2655.344326 user, 11.209296 system)
  [ Run times consist of 135.639 seconds GC time, and 2530.915 seconds non-GC time. ]
  99.47% CPU
  37 lambdas converted
  4,298,920,242,801 processor cycles
  405,156,790,816 bytes consed
  
end: Fri Feb 15 11:51:55 CST 2013
start: Fri Feb 15 11:51:56 CST 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDFThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/b/RUN703969787.csv"
ting analogy networks for each person ....

(P19 P18 P17 P16 P15 P14 P13 P12 P11 P10 P09 P08 P07 P06 P05 P04 P03 P02 P01 AA) 
Running popco with maximum of 5 cycles each in 5000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime3/b/RUN270026815.csv"
times consist of 131.956 seconds GC time, and 2538.399 seconds non-GC time. ]
  99.47% CPU
  37 lambdas converted
  4,304,961,279,912 processor cycles
  405,180,721,792 bytes consed
  
end: Fri Feb 15 11:52:30 CST 2013
Evaluation took:
  2704.424 seconds of real time
  2690.848929 seconds of total run time (2679.284687 user, 11.564242 system)
  [ Run times consist of 139.333 seconds GC time, and 2551.516 seconds non-GC time. ]
  99.50% CPU
  37 lambdas converted
  4,336,830,538,996 processor cycles
  405,157,096,832 bytes consed
  
end: Fri Feb 15 11:52:34 CST 2013
Evaluation took:
  2689.777 seconds of real time
  2677.473962 seconds of total run time (2666.417643 user, 11.056319 system)
  [ Run times consist of 138.259 seconds GC time, and 2539.215 seconds non-GC time. ]
  99.54% CPU
  37 lambdas converted
  4,313,333,599,113 processor cycles
  405,174,275,232 bytes consed
  
end: Fri Feb 15 11:52:34 CST 2013
Evaluation took:
  2720.587 seconds of real time
  2707.305428 seconds of total run time (2696.095132 user, 11.210296 system)
  [ Run times consist of 134.963 seconds GC time, and 2572.343 seconds non-GC time. ]
  99.51% CPU
  37 lambdas converted
  4,362,766,300,460 processor cycles
  405,161,520,432 bytes consed
  
end: Fri Feb 15 11:52:35 CST 2013
Evaluation took:
  2708.777 seconds of real time
  2686.232630 seconds of total run time (2675.215305 user, 11.017325 system)
  [ Run times consist of 136.502 seconds GC time, and 2549.731 seconds non-GC time. ]
  99.17% CPU
  37 lambdas converted
  4,343,836,007,223 processor cycles
  405,159,349,264 bytes consed
  
end: Fri Feb 15 11:52:38 CST 2013
Evaluation took:
  2680.728 seconds of real time
  2669.959104 seconds of total run time (2658.669821 user, 11.289283 system)
  [ Run times consist of 131.133 seconds GC time, and 2538.827 seconds non-GC time. ]
  99.60% CPU
  37 lambdas converted
  4,298,845,066,171 processor cycles
  405,165,075,248 bytes consed
  
end: Fri Feb 15 11:52:41 CST 2013
Evaluation took:
  2671.571 seconds of real time
  2653.164658 seconds of total run time (2641.536425 user, 11.628233 system)
  [ Run times consist of 133.988 seconds GC time, and 2519.177 seconds non-GC time. ]
  99.31% CPU
  37 lambdas converted
  4,284,215,370,373 processor cycles
  405,171,916,864 bytes consed
  
end: Fri Feb 15 11:52:48 CST 2013
Evaluation took:
  2747.580 seconds of real time
  2728.038275 seconds of total run time (2716.894969 user, 11.143306 system)
  [ Run times consist of 136.858 seconds GC time, and 2591.181 seconds non-GC time. ]
  99.29% CPU
  37 lambdas converted
  4,406,045,502,453 processor cycles
  405,170,507,152 bytes consed
  
end: Fri Feb 15 11:52:48 CST 2013
Evaluation took:
  2704.718 seconds of real time
  2683.391063 seconds of total run time (2672.206763 user, 11.184300 system)
  [ Run times consist of 134.128 seconds GC time, and 2549.264 seconds non-GC time. ]
  99.21% CPU
  37 lambdas converted
  4,337,288,238,331 processor cycles
  405,170,505,696 bytes consed
  
end: Fri Feb 15 11:52:49 CST 2013
Evaluation took:
  2690.319 seconds of real time
  2677.462964 seconds of total run time (2666.083694 user, 11.379270 system)
  [ Run times consist of 132.950 seconds GC time, and 2544.513 seconds non-GC time. ]
  99.52% CPU
  37 lambdas converted
  4,314,241,686,548 processor cycles
  405,168,805,984 bytes consed
  
end: Fri Feb 15 11:52:53 CST 2013
Evaluation took:
  2693.242 seconds of real time
  2680.560494 seconds of total run time (2669.504174 user, 11.056320 system)
  [ Run times consist of 131.216 seconds GC time, and 2549.345 seconds non-GC time. ]
  99.53% CPU
  37 lambdas converted
  4,318,926,754,780 processor cycles
  405,173,029,680 bytes consed
  
end: Fri Feb 15 11:52:53 CST 2013
Evaluation took:
  2679.952 seconds of real time
  2671.403886 seconds of total run time (2660.248581 user, 11.155305 system)
  [ Run times consist of 132.261 seconds GC time, and 2539.143 seconds non-GC time. ]
  99.68% CPU
  37 lambdas converted
  4,297,582,128,567 processor cycles
  405,164,516,912 bytes consed
  
end: Fri Feb 15 11:52:56 CST 2013
Evaluation took:
  2714.772 seconds of real time
  2691.994754 seconds of total run time (2680.992427 user, 11.002327 system)
  [ Run times consist of 135.733 seconds GC time, and 2556.262 seconds non-GC time. ]
  99.16% CPU
  37 lambdas converted
  4,353,448,369,770 processor cycles
  405,164,176,880 bytes consed
  
end: Fri Feb 15 11:52:59 CST 2013
Evaluation took:
  2715.719 seconds of real time
  2696.912007 seconds of total run time (2686.006665 user, 10.905342 system)
  [ Run times consist of 129.202 seconds GC time, and 2567.711 seconds non-GC time. ]
  99.31% CPU
  37 lambdas converted
  4,354,973,978,214 processor cycles
  405,164,220,304 bytes consed
  
end: ation took:
  2745.681 seconds of real time
  2731.721715 seconds of total run time (2720.330447 user, 11.391268 system)
  [ Run times consist of 135.349 seconds GC time, and 2596.373 seconds non-GC time. ]
  99.49% CPU
  37 lambdas converted
  4,403,002,939,077 processor cycles
  405,158,150,128 bytes consed
  
end: ation took:
  2669.505 seconds of real time
  2660.111601 seconds of total run time (2649.065281 user, 11.046320 system)
  [ Run times consist of 131.617 seconds GC time, and 2528.495 seconds non-GC time. ]
  99.65% CPU
  37 lambdas converted
  4,280,877,745,507 processor cycles
  405,162,425,344 bytes consed
  
end: eb 15 11:53:00 CST 2013
Fri Feb 15 11:53:01 CST 2013
Fri Feb 15 11:53:01 CST 2013
Evaluation took:
  2699.330 seconds of real time
  2686.920525 seconds of total run time (2675.755223 user, 11.165302 system)
  [ Run times consist of 134.182 seconds GC time, and 2552.739 seconds non-GC time. ]
  99.54% CPU
  37 lambdas converted
  4,328,730,969,183 processor cycles
  405,161,658,000 bytes consed
  
end: Fri Feb 15 11:53:01 CST 2013
Evaluation took:
  2732.122 seconds of real time
  2714.382351 seconds of total run time (2703.569995 user, 10.812356 system)
  [ Run times consist of 132.779 seconds GC time, and 2581.604 seconds non-GC time. ]
  99.35% CPU
  37 lambdas converted
  4,381,223,257,540 processor cycles
  405,168,369,456 bytes consed
  
end: ation took:
  2733.091 seconds of real time
  2716.830978 seconds of total run time (2705.789657 user, 11.041321 system)
  [ Run times consist of 133.719 seconds GC time, and 2583.112 seconds non-GC time. ]
  99.41% CPU
  37 lambdas converted
  4,382,797,122,983 processor cycles
  405,175,924,224 bytes consed
  
end: eb 15 11:53:03 CST 2013
Fri Feb 15 11:53:03 CST 2013
Evaluation took:
  2687.564 seconds of real time
  2676.954040 seconds of total run time (2665.584769 user, 11.369271 system)
  [ Run times consist of 131.507 seconds GC time, and 2545.448 seconds non-GC time. ]
  99.61% CPU
  37 lambdas converted
  4,309,808,918,772 processor cycles
  405,161,607,248 bytes consed
  
end: Fri Feb 15 11:53:04 CST 2013
Evaluation took:
  2720.522 seconds of real time
  2701.425320 seconds of total run time (2690.211025 user, 11.214295 system)
  [ Run times consist of 136.920 seconds GC time, and 2564.506 seconds non-GC time. ]
  99.30% CPU
  37 lambdas converted
  4,362,742,419,660 processor cycles
  405,170,344,848 bytes consed
  
end: Fri Feb 15 11:53:06 CST 2013
Evaluation took:
  2722.287 seconds of real time
  2706.834499 seconds of total run time (2695.492223 user, 11.342276 system)
  [ Run times consist of 133.742 seconds GC time, and 2573.093 seconds non-GC time. ]
  99.43% CPU
  37 lambdas converted
  4,365,462,704,688 processor cycles
  405,173,683,488 bytes consed
  
end: Fri Feb 15 11:53:06 CST 2013
Evaluation took:
  2724.124 seconds of real time
  2709.969022 seconds of total run time (2698.427776 user, 11.541246 system)
  [ Run times consist of 132.481 seconds GC time, and 2577.489 seconds non-GC time. ]
  99.48% CPU
  37 lambdas converted
  4,368,400,806,780 processor cycles
  405,161,439,104 bytes consed
  
end: ation took:
  2724.444 seconds of real time
  2707.387415 seconds of total run time (2696.362091 user, 11.025324 system)
  [ Run times consist of 132.063 seconds GC time, and 2575.325 seconds non-GC time. ]
  99.37% CPU
  37 lambdas converted
  4,368,922,824,922 processor cycles
  405,172,298,816 bytes consed
  
Fri FFri Feb 15 11:53:09 CST 2013
Evaluation took:
  2681.994 seconds of real time
  2668.723292 seconds of total run time (2657.614981 user, 11.108311 system)
  [ Run times consist of 129.505 seconds GC time, and 2539.219 seconds non-GC time. ]
  99.51% CPU
  37 lambdas converted
  4,300,848,983,966 processor cycles
  405,159,697,872 bytes consed
  
end: Fri Feb 15 11:53:13 CST 2013
Evaluation took:
  2697.686 seconds of real time
  2679.550647 seconds of total run time (2668.185374 user, 11.365273 system)
  [ Run times consist of 131.838 seconds GC time, and 2547.713 seconds non-GC time. ]
  99.33% CPU
  37 lambdas converted
  4,326,028,968,983 processor cycles
  405,166,134,560 bytes consed
  
end: Fri Feb 15 11:53:13 CST 2013
Evaluation took:
  2699.937 seconds of real time
  2678.369826 seconds of total run time (2667.126535 user, 11.243291 system)
  [ Run times consist of 133.751 seconds GC time, and 2544.619 seconds non-GC time. ]
  99.20% CPU
  37 lambdas converted
  4,329,659,577,983 processor cycles
  405,160,407,856 bytes consed
  
end: Fri Feb 15 11:53:16 CST 2013
Evaluation took:
  2671.416 seconds of real time
  2657.980925 seconds of total run time (2646.897610 user, 11.083315 system)
  [ Run times consist of 132.612 seconds GC time, and 2525.369 seconds non-GC time. ]
  99.50% CPU
  37 lambdas converted
  4,283,906,151,933 processor cycles
  405,164,145,920 bytes consed
  
end: Fri Feb 15 11:53:16 CST 2013
Evaluation took:
  2701.275 seconds of real time
  2683.411060 seconds of total run time (2672.378737 user, 11.032323 system)
  [ Run times consist of 134.469 seconds GC time, and 2548.943 seconds non-GC time. ]
  99.34% CPU
  37 lambdas converted
  4,331,761,328,769 processor cycles
  405,159,412,448 bytes consed
  
end: Fri Feb 15 11:53:17 CST 2013
Evaluation took:
  2715.551 seconds of real time
  2701.641287 seconds of total run time (2690.120039 user, 11.521248 system)
  [ Run times consist of 134.537 seconds GC time, and 2567.105 seconds non-GC time. ]
  99.49% CPU
  37 lambdas converted
  4,354,690,025,200 processor cycles
  405,162,564,432 bytes consed
  
end: Fri Feb 15 11:53:17 CST 2013
Evaluation took:
  2718.521 seconds of real time
  2696.329096 seconds of total run time (2684.973822 user, 11.355274 system)
  [ Run times consist of 132.156 seconds GC time, and 2564.174 seconds non-GC time. ]
  99.18% CPU
  37 lambdas converted
  4,359,535,094,783 processor cycles
  405,170,086,960 bytes consed
  
end: Fri Feb 15 11:53:19 CST 2013
Evaluation took:
  2689.569 seconds of real time
  2675.872205 seconds of total run time (2665.040852 user, 10.831353 system)
  [ Run times consist of 131.667 seconds GC time, and 2544.206 seconds non-GC time. ]
  99.49% CPU
  37 lambdas converted
  4,313,015,943,273 processor cycles
  405,160,969,200 bytes consed
  
end: Fri Feb 15 11:53:20 CST 2013
Evaluation took:
  2692.367 seconds of real time
  2675.131318 seconds of total run time (2663.753048 user, 11.378270 system)
  [ Run times consist of 137.562 seconds GC time, and 2537.570 seconds non-GC time. ]
  99.36% CPU
  37 lambdas converted
  4,317,574,681,847 processor cycles
  405,160,260,624 bytes consed
  
end: Fri Feb 15 11:53:23 CST 2013
Evaluation took:
  2723.571 seconds of real time
  2706.551542 seconds of total run time (2695.288254 user, 11.263288 system)
  [ Run times consist of 131.930 seconds GC time, and 2574.622 seconds non-GC time. ]
  99.38% CPU
  37 lambdas converted
  4,367,522,652,271 processor cycles
  405,159,230,496 bytes consed
  
Evaluation took:
  2701.164 seconds of real time
  2684.045963 seconds of total run time (2672.599703 user, 11.446260 system)
  [ Run times consist of 132.557 seconds GC time, and 2551.489 seconds non-GC time. ]
  99.37% CPU
  37 lambdas converted
  4,331,615,420,493 processor cycles
  405,170,449,280 bytes consed
  
end: Fri Feb 15 11:53:32 CST 2013
Fri Feb 15 11:53:32 CST 2013
Evaluation took:
  2717.037 seconds of real time
  2708.802199 seconds of total run time (2697.186965 user, 11.615234 system)
  [ Run times consist of 140.347 seconds GC time, and 2568.456 seconds non-GC time. ]
  99.70% CPU
  37 lambdas converted
  4,357,109,446,354 processor cycles
  405,171,641,824 bytes consed
  
end: Fri Feb 15 11:53:33 CST 2013
Evaluation took:
  2706.857 seconds of real time
  2696.521066 seconds of total run time (2685.000818 user, 11.520248 system)
  [ Run times consist of 133.631 seconds GC time, and 2562.891 seconds non-GC time. ]
  99.62% CPU
  37 lambdas converted
  4,340,774,846,887 processor cycles
  405,161,272,352 bytes consed
  
end: Fri Feb 15 11:53:38 CST 2013
Evaluation took:
  2694.835 seconds of real time
  2666.326656 seconds of total run time (2655.265338 user, 11.061318 system)
  [ Run times consist of 131.717 seconds GC time, and 2534.610 seconds non-GC time. ]
  98.94% CPU
  37 lambdas converted
  4,321,521,407,190 processor cycles
  405,167,537,344 bytes consed
  
end: Fri Feb 15 11:53:39 CST 2013
Evaluation took:
  2711.027 seconds of real time
  2695.617203 seconds of total run time (2684.206938 user, 11.410265 system)
  [ Run times consist of 132.170 seconds GC time, and 2563.448 seconds non-GC time. ]
  99.43% CPU
  37 lambdas converted
  4,347,444,291,292 processor cycles
  405,163,850,176 bytes consed
  
end: Fri Feb 15 11:53:42 CST 2013
Evaluation took:
  2773.943 seconds of real time
  2760.684312 seconds of total run time (2749.401028 user, 11.283284 system)
  [ Run times consist of 137.109 seconds GC time, and 2623.576 seconds non-GC time. ]
  99.52% CPU
  37 lambdas converted
  4,448,303,774,783 processor cycles
  405,166,597,536 bytes consed
  
end: Fri Feb 15 11:53:43 CST 2013
Evaluation took:
  2727.779 seconds of real time
  2709.069159 seconds of total run time (2697.983844 user, 11.085315 system)
  [ Run times consist of 133.807 seconds GC time, and 2575.263 seconds non-GC time. ]
  99.31% CPU
  37 lambdas converted
  4,374,339,781,207 processor cycles
  405,162,567,376 bytes consed
  
end: Fri Feb 15 11:53:43 CST 2013
Evaluation took:
  2699.127 seconds of real time
  2686.540583 seconds of total run time (2672.359739 user, 14.180844 system)
  [ Run times consist of 129.107 seconds GC time, and 2557.434 seconds non-GC time. ]
  99.53% CPU
  37 lambdas converted
  4,328,339,954,131 processor cycles
  405,159,830,112 bytes consed
  
end: Fri Feb 15 11:53:44 CST 2013
Evaluation took:
  2746.057 seconds of real time
  2732.594583 seconds of total run time (2721.634249 user, 10.960334 system)
  [ Run times consist of 137.372 seconds GC time, and 2595.223 seconds non-GC time. ]
  99.51% CPU
  37 lambdas converted
  4,403,592,443,063 processor cycles
  405,158,383,552 bytes consed
  
end: Fri Feb 15 11:53:48 CST 2013
Evaluation took:
  2733.740 seconds of real time
  2719.657550 seconds of total run time (2708.536240 user, 11.121310 system)
  [ Run times consist of 133.983 seconds GC time, and 2585.675 seconds non-GC time. ]
  99.48% CPU
  37 lambdas converted
  4,383,866,239,293 processor cycles
  405,167,470,048 bytes consed
  
end: Fri Feb 15 11:53:50 CST 2013
Evaluation took:
  2720.865 seconds of real time
  2707.703368 seconds of total run time (2696.903009 user, 10.800359 system)
  [ Run times consist of 137.362 seconds GC time, and 2570.342 seconds non-GC time. ]
  99.52% CPU
  37 lambdas converted
  4,363,210,337,860 processor cycles
  405,160,776,480 bytes consed
  
end: ation took:
  2783.223 seconds of real time
  2769.992897 seconds of total run time (2758.889585 user, 11.103312 system)
  [ Run times consist of 134.746 seconds GC time, and 2635.247 seconds non-GC time. ]
  99.52% CPU
  37 lambdas converted
  4,463,187,461,045 processor cycles
  405,159,946,048 bytes consed
  
Fri Feb 15 11:53:53 CST 2013
Fri Feb 15 11:53:53 CST 2013
Evaluation took:
  2769.760 seconds of real time
  2746.153522 seconds of total run time (2734.633273 user, 11.520249 system)
  [ Run times consist of 134.182 seconds GC time, and 2611.972 seconds non-GC time. ]
  99.15% CPU
  37 lambdas converted
  4,441,625,426,923 processor cycles
  405,167,439,312 bytes consed
  
end: Fri Feb 15 11:53:54 CST 2013
Evaluation took:
  2739.074 seconds of real time
  2718.920661 seconds of total run time (2707.707366 user, 11.213295 system)
  [ Run times consist of 130.697 seconds GC time, and 2588.224 seconds non-GC time. ]
  99.26% CPU
  37 lambdas converted
  4,392,407,575,582 processor cycles
  405,169,649,168 bytes consed
  
end: Fri Feb 15 11:53:55 CST 2013
Evaluation took:
  2743.750 seconds of real time
  2731.558740 seconds of total run time (2719.801527 user, 11.757213 system)
  [ Run times consist of 133.984 seconds GC time, and 2597.575 seconds non-GC time. ]
  99.56% CPU
  37 lambdas converted
  4,399,959,911,168 processor cycles
  405,173,079,312 bytes consed
  
end: Fri Feb 15 11:54:00 CST 2013
Evaluation took:
  2745.911 seconds of real time
  2733.206489 seconds of total run time (2721.874212 user, 11.332277 system)
  [ Run times consist of 135.425 seconds GC time, and 2597.782 seconds non-GC time. ]
  99.54% CPU
  37 lambdas converted
  4,403,367,708,926 processor cycles
  405,171,860,464 bytes consed
  
end: Fri Feb 15 11:54:02 CST 2013
Evaluation took:
  2747.305 seconds of real time
  2721.554260 seconds of total run time (2709.922029 user, 11.632231 system)
  [ Run times consist of 140.084 seconds GC time, and 2581.471 seconds non-GC time. ]
  99.06% CPU
  37 lambdas converted
  4,405,616,075,888 processor cycles
  405,176,577,392 bytes consed
  
end: ation took:
  2763.071 seconds of real time
  2739.581519 seconds of total run time (2728.317232 user, 11.264287 system)
  [ Run times consist of 137.338 seconds GC time, and 2602.244 seconds non-GC time. ]
  99.15% CPU
  37 lambdas converted
  4,430,907,776,506 processor cycles
  405,171,767,552 bytes consed
  
end: eb 15 11:54:05 CST 2013
Fri Feb 15 11:54:05 CST 2013
Evaluation took:
  2688.734 seconds of real time
  2668.817277 seconds of total run time (2657.537992 user, 11.279285 system)
  [ Run times consist of 131.808 seconds GC time, and 2537.010 seconds non-GC time. ]
  99.26% CPU
  37 lambdas converted
  4,311,726,659,028 processor cycles
  405,166,990,720 bytes consed
  
end: Fri Feb 15 11:54:05 CST 2013
Evaluation took:
  2736.029 seconds of real time
  2718.655701 seconds of total run time (2707.316425 user, 11.339276 system)
  [ Run times consist of 136.805 seconds GC time, and 2581.851 seconds non-GC time. ]
  99.37% CPU
  37 lambdas converted
  4,387,507,079,877 processor cycles
  405,169,884,224 bytes consed
  
end: Fri Feb 15 11:54:08 CST 2013
Evaluation took:
  2714.360 seconds of real time
  2698.618748 seconds of total run time (2687.395454 user, 11.223294 system)
  [ Run times consist of 129.365 seconds GC time, and 2569.254 seconds non-GC time. ]
  99.42% CPU
  37 lambdas converted
  4,352,769,951,993 processor cycles
  405,168,205,872 bytes consed
  
end: Fri Feb 15 11:54:14 CST 2013
Evaluation took:
  2758.244 seconds of real time
  2746.363489 seconds of total run time (2734.880235 user, 11.483254 system)
  [ Run times consist of 134.839 seconds GC time, and 2611.525 seconds non-GC time. ]
  99.57% CPU
  37 lambdas converted
  4,423,152,712,274 processor cycles
  405,176,496,144 bytes consed
  
end: Fri Feb 15 11:54:14 CST 2013
Evaluation took:
  2700.229 seconds of real time
  2682.501198 seconds of total run time (2670.994947 user, 11.506251 system)
  [ Run times consist of 136.010 seconds GC time, and 2546.492 seconds non-GC time. ]
  99.34% CPU
  37 lambdas converted
  4,330,123,604,880 processor cycles
  405,160,490,736 bytes consed
  
end: Fri Feb 15 11:54:16 CST 2013
Evaluation took:
  2776.304 seconds of real time
  2760.456347 seconds of total run time (2749.169063 user, 11.287284 system)
  [ Run times consist of 132.404 seconds GC time, and 2628.053 seconds non-GC time. ]
  99.43% CPU
  37 lambdas converted
  4,452,154,756,969 processor cycles
  405,177,636,800 bytes consed
  
end: Fri Feb 15 11:54:16 CST 2013
Evaluation took:
  2746.103 seconds of real time
  2729.665028 seconds of total run time (2718.735690 user, 10.929338 system)
  [ Run times consist of 131.666 seconds GC time, and 2598.0000 seconds non-GC time. ]
  99.40% CPU
  37 lambdas converted
  4,403,653,882,410 processor cycles
  405,162,368,288 bytes consed
  
end: Fri Feb 15 11:54:17 CST 2013
Evaluation took:
  2763.252 seconds of real time
  2742.033147 seconds of total run time (2731.015822 user, 11.017325 system)
  [ Run times consist of 133.080 seconds GC time, and 2608.954 seconds non-GC time. ]
  99.23% CPU
  37 lambdas converted
  4,431,238,152,052 processor cycles
  405,161,699,504 bytes consed
  
end: Fri Feb 15 11:54:19 CST 2013
Evaluation took:
  2720.804 seconds of real time
  2705.580689 seconds of total run time (2694.534368 user, 11.046321 system)
  [ Run times consist of 135.865 seconds GC time, and 2569.716 seconds non-GC time. ]
  99.44% CPU
  37 lambdas converted
  4,363,084,695,883 processor cycles
  405,149,506,576 bytes consed
  
end: Fri Feb 15 11:54:20 CST 2013
Evaluation took:
  2706.845 seconds of real time
  2694.589360 seconds of total run time (2682.851145 user, 11.738215 system)
  [ Run times consist of 136.040 seconds GC time, and 2558.550 seconds non-GC time. ]
  99.55% CPU
  37 lambdas converted
  4,340,724,025,441 processor cycles
  405,165,699,168 bytes consed
  
end: Fri Feb 15 11:54:23 CST 2013
Evaluation took:
  2832.532 seconds of real time
  2788.684055 seconds of total run time (2777.486757 user, 11.197298 system)
  [ Run times consist of 138.116 seconds GC time, and 2650.569 seconds non-GC time. ]
  98.45% CPU
  37 lambdas converted
  4,542,311,482,410 processor cycles
  405,170,039,008 bytes consed
  
end: Fri Feb 15 11:54:27 CST 2013
Evaluation took:
  2750.622 seconds of real time
  2726.756470 seconds of total run time (2715.871125 user, 10.885345 system)
  [ Run times consist of 132.183 seconds GC time, and 2594.574 seconds non-GC time. ]
  99.13% CPU
  37 lambdas converted
  4,410,927,486,608 processor cycles
  405,162,383,216 bytes consed
  
end: Fri Feb 15 11:54:35 CST 2013
Evaluation took:
  2758.963 seconds of real time
  2747.246354 seconds of total run time (2736.013062 user, 11.233292 system)
  [ Run times consist of 141.325 seconds GC time, and 2605.922 seconds non-GC time. ]
  99.58% CPU
  37 lambdas converted
  4,424,320,321,330 processor cycles
  405,161,396,624 bytes consed
  
end: Fri Feb 15 11:54:43 CST 2013
Evaluation took:
  2807.570 seconds of real time
  2795.444027 seconds of total run time (2784.061758 user, 11.382269 system)
  [ Run times consist of 134.130 seconds GC time, and 2661.315 seconds non-GC time. ]
  99.57% CPU
  37 lambdas converted
  4,502,231,293,068 processor cycles
  405,164,581,504 bytes consed
  
end: Fri Feb 15 11:54:49 CST 2013
Evaluation took:
  2751.748 seconds of real time
  2708.735209 seconds of total run time (2697.684889 user, 11.050320 system)
  [ Run times consist of 133.977 seconds GC time, and 2574.759 seconds non-GC time. ]
  98.44% CPU
  37 lambdas converted
  4,412,769,027,993 processor cycles
  405,167,161,872 bytes consed
  
end: Fri Feb 15 11:54:51 CST 2013
Evaluation took:
  2752.847 seconds of real time
  2729.588040 seconds of total run time (2718.564716 user, 11.023324 system)
  [ Run times consist of 134.841 seconds GC time, and 2594.748 seconds non-GC time. ]
  99.16% CPU
  37 lambdas converted
  4,414,503,921,023 processor cycles
  405,166,741,872 bytes consed
  
end: Fri Feb 15 11:54:52 CST 2013
Evaluation took:
  2759.544 seconds of real time
  2744.588760 seconds of total run time (2733.517443 user, 11.071317 system)
  [ Run times consist of 134.138 seconds GC time, and 2610.451 seconds non-GC time. ]
  99.46% CPU
  37 lambdas converted
  4,425,264,431,218 processor cycles
  405,157,447,296 bytes consed
  
end: Fri Feb 15 11:55:00 CST 2013
Evaluation took:
  2702.184 seconds of real time
  2677.989884 seconds of total run time (2666.805584 user, 11.184300 system)
  [ Run times consist of 136.510 seconds GC time, and 2541.480 seconds non-GC time. ]
  99.10% CPU
  37 lambdas converted
  4,333,234,493,898 processor cycles
  405,170,110,080 bytes consed
  
end: Fri Feb 15 11:55:07 CST 2013
Evaluation took:
  2708.666 seconds of real time
  2693.893466 seconds of total run time (2682.901137 user, 10.992329 system)
  [ Run times consist of 139.125 seconds GC time, and 2554.769 seconds non-GC time. ]
  99.45% CPU
  37 lambdas converted
  4,343,640,394,385 processor cycles
  405,163,444,432 bytes consed
  
end: Fri Feb 15 11:55:08 CST 2013
Evaluation took:
  2800.348 seconds of real time
  2771.842615 seconds of total run time (2760.630320 user, 11.212295 system)
  [ Run times consist of 136.166 seconds GC time, and 2635.677 seconds non-GC time. ]
  98.98% CPU
  37 lambdas converted
  4,490,647,097,465 processor cycles
  405,153,845,152 bytes consed
  
end: Fri Feb 15 11:55:11 CST 2013
Evaluation took:
  2832.017 seconds of real time
  2812.051502 seconds of total run time (2800.716226 user, 11.335276 system)
  [ Run times consist of 138.890 seconds GC time, and 2673.162 seconds non-GC time. ]
  99.30% CPU
  37 lambdas converted
  4,541,432,733,143 processor cycles
  405,173,941,408 bytes consed
  
end: Fri Feb 15 11:55:13 CST 2013
Evaluation took:
  2790.481 seconds of real time
  2771.797623 seconds of total run time (2760.231381 user, 11.566242 system)
  [ Run times consist of 134.218 seconds GC time, and 2637.580 seconds non-GC time. ]
  99.33% CPU
  37 lambdas converted
  4,474,857,182,336 processor cycles
  405,158,038,896 bytes consed
  
end: Fri Feb 15 11:55:15 CST 2013
Evaluation took:
  2780.215 seconds of real time
  2757.911734 seconds of total run time (2746.656445 user, 11.255289 system)
  [ Run times consist of 131.895 seconds GC time, and 2626.017 seconds non-GC time. ]
  99.20% CPU
  37 lambdas converted
  4,458,450,724,290 processor cycles
  405,153,699,168 bytes consed
  
end: Fri Feb 15 11:55:20 CST 2013
Evaluation took:
  2766.040 seconds of real time
  2749.116072 seconds of total run time (2737.429848 user, 11.686224 system)
  [ Run times consist of 137.218 seconds GC time, and 2611.899 seconds non-GC time. ]
  99.39% CPU
  37 lambdas converted
  4,435,676,535,124 processor cycles
  405,158,088,720 bytes consed
  
end: Fri Feb 15 11:55:25 CST 2013
Evaluation took:
  2818.872 seconds of real time
  2806.562338 seconds of total run time (2795.036090 user, 11.526248 system)
  [ Run times consist of 135.133 seconds GC time, and 2671.430 seconds non-GC time. ]
  99.56% CPU
  37 lambdas converted
  4,520,335,425,794 processor cycles
  405,163,729,856 bytes consed
  
end: Fri Feb 15 11:55:30 CST 2013
Evaluation took:
  2816.273 seconds of real time
  2802.498955 seconds of total run time (2791.006702 user, 11.492253 system)
  [ Run times consist of 140.898 seconds GC time, and 2661.601 seconds non-GC time. ]
  99.51% CPU
  37 lambdas converted
  4,516,259,515,794 processor cycles
  405,156,958,112 bytes consed
  
end: Fri Feb 15 11:57:27 CST 2013
Evaluation took:
  2838.130 seconds of real time
  2812.694406 seconds of total run time (2800.133315 user, 12.561091 system)
  [ Run times consist of 142.429 seconds GC time, and 2670.266 seconds non-GC time. ]
  99.10% CPU
  37 lambdas converted
  4,551,311,024,916 processor cycles
  405,163,992,400 bytes consed
  
end: ation took:
  2824.584 seconds of real time
  2815.908917 seconds of total run time (2803.674777 user, 12.234140 system)
  [ Run times consist of 127.991 seconds GC time, and 2687.918 seconds non-GC time. ]
  99.69% CPU
  37 lambdas converted
  4,529,576,852,259 processor cycles
  405,165,934,176 bytes consed
  
end: ation took:
  2899.460 seconds of real time
  2882.613776 seconds of total run time (2870.294649 user, 12.319127 system)
  [ Run times consist of 141.542 seconds GC time, and 2741.072 seconds non-GC time. ]
  99.42% CPU
  37 lambdas converted
  4,649,683,107,292 processor cycles
  405,177,485,120 bytes consed
  
end: eb 15 11:58:06 CST 2013
Fri Feb 15 11:58:06 CST 2013
Evaluation took:
  1138.726 seconds of real time
  1138.322948 seconds of total run time (1134.376548 user, 3.946400 system)
  [ Run times consist of 43.866 seconds GC time, and 1094.457 seconds non-GC time. ]
  99.96% CPU
  37 lambdas converted
  3,029,201,086,567 processor cycles
  405,157,000,608 bytes consed
  
end: Fri Feb 15 11:58:15 CST 2013
Evaluation took:
  2873.751 seconds of real time
  2849.318838 seconds of total run time (2836.673760 user, 12.645078 system)
  [ Run times consist of 144.263 seconds GC time, and 2705.056 seconds non-GC time. ]
  99.15% CPU
  37 lambdas converted
  4,608,454,364,921 processor cycles
  405,156,968,336 bytes consed
  
end: Fri Feb 15 11:58:23 CST 2013
Evaluation took:
  2928.089 seconds of real time
  2909.237729 seconds of total run time (2896.574654 user, 12.663075 system)
  [ Run times consist of 128.499 seconds GC time, and 2780.739 seconds non-GC time. ]
  99.36% CPU
  37 lambdas converted
  4,695,559,995,356 processor cycles
  405,169,577,808 bytes consed
  
end: Fri Feb 15 12:00:28 CST 2013
Evaluation took:
  2945.223 seconds of real time
  2929.179696 seconds of total run time (2916.729589 user, 12.450107 system)
  [ Run times consist of 139.159 seconds GC time, and 2790.021 seconds non-GC time. ]
  99.46% CPU
  37 lambdas converted
  4,723,070,192,187 processor cycles
  405,175,459,024 bytes consed
  
end: Fri Feb 15 12:00:45 CST 2013
Evaluation took:
  2944.895 seconds of real time
  2929.609632 seconds of total run time (2915.775735 user, 13.833897 system)
  [ Run times consist of 137.426 seconds GC time, and 2792.184 seconds non-GC time. ]
  99.48% CPU
  37 lambdas converted
  4,722,517,602,544 processor cycles
  405,166,384,816 bytes consed
  
end: Fri Feb 15 12:01:02 CST 2013
Evaluation took:
  2949.192 seconds of real time
  2926.211147 seconds of total run time (2912.829182 user, 13.381965 system)
  [ Run times consist of 139.079 seconds GC time, and 2787.133 seconds non-GC time. ]
  99.22% CPU
  37 lambdas converted
  4,729,435,951,561 processor cycles
  405,150,218,640 bytes consed
  
end: Fri Feb 15 12:02:05 CST 2013
Evaluation took:
  2938.809 seconds of real time
  2906.065210 seconds of total run time (2893.068186 user, 12.997024 system)
  [ Run times consist of 142.922 seconds GC time, and 2763.144 seconds non-GC time. ]
  98.89% CPU
  37 lambdas converted
  4,712,759,087,567 processor cycles
  405,161,848,800 bytes consed
  
end: Fri Feb 15 12:02:09 CST 2013
Evaluation took:
  2737.775 seconds of real time
  2723.553957 seconds of total run time (2712.190684 user, 11.363273 system)
  [ Run times consist of 130.452 seconds GC time, and 2593.102 seconds non-GC time. ]
  99.48% CPU
  37 lambdas converted
  4,390,342,549,321 processor cycles
  405,175,447,776 bytes consed
  
end: Fri Feb 15 12:37:43 CST 2013
Evaluation took:
  2760.739 seconds of real time
  2744.347795 seconds of total run time (2732.901535 user, 11.446260 system)
  [ Run times consist of 134.561 seconds GC time, and 2609.787 seconds non-GC time. ]
  99.41% CPU
  37 lambdas converted
  4,427,194,481,665 processor cycles
  405,156,881,664 bytes consed
  
end: Fri Feb 15 12:38:15 CST 2013
Evaluation took:
  2875.604 seconds of real time
  2862.914771 seconds of total run time (2851.524502 user, 11.390269 system)
  [ Run times consist of 139.161 seconds GC time, and 2723.754 seconds non-GC time. ]
  99.56% CPU
  37 lambdas converted
  4,611,368,418,066 processor cycles
  405,170,032,352 bytes consed
  
end: Fri Feb 15 12:40:10 CST 2013
