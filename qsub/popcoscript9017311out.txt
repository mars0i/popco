dir=crime base=crime3socnet5switch
start: Tue Mar 12 16:13:04 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
ata/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

ue Mar 12 16:13:05 CDT 2013
"POPCO" 
this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
g/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
ime3socnet5switch

This is SBCL 1.1.3, an implem"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
. unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv.
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN939530073.csv..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-modelThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN088303698.csv"
 software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
CL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
er
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch


"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
s is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

rogram is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Version 4.0. June, 2000" 
"Permission is granted for use for research purposes only." 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
e software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN140570339.csv"

ameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
."Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Creating analogy networks for each person ....
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

ded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0

"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.
Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF
4 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN140023553.csv"
anged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 

Creating analogy networks for each person ....

"var-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

-specific1" "popco-model-run" 
n" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

Creating analogy networks for each person ....

uessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 

Creating analogy networks for each person ....
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

itch/RUN708889762.csv"

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN406050465.csv"
5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN347509201.csv"
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN182345705.csv"
01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN972788701.csv"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN859317247.csv"
sv file "../data/crime/crime3socnet5switch/RUN539233300.csv"

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converseThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN007342999.csv"
net5switch/RUN008068512.csv"
twork" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagarddir=crime base=crime3socnet5switch
start: action'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN993605661.csv"
dir=crime base=crime3socnet5switch
start:  commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

d crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....
random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN849943479.csv"
ohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....
at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN470722500.csv"
ohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-f"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
.ils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

C
(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN193054153.csv"
"popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T

V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN555110774.csv"
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN059354821.csv"
01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN026144523.csv"
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN169340980.csv"
commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposeThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN915493264.csv"
dir=crime base=crime3socnet5switch
start: Tue Mar 12 16:43:19 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN627634620.csv"
dir=crime base=crime3socnet5switch
start: Tue Mar 12 16:44:05 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN218565808.csv"
dir=crime base=crime3socnet5switch
start: Tue Mar 12 16:46:35 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN298713186.csv"
dir=crime base=crime3socnet5switch
start: Tue Mar 12 16:48:19 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN371359047.csv"
dir=crime base=crime3socnet5switch
start: Tue Mar 12 16:50:05 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN591432204.csv"
dir=crime base=crime3socnet5switch
start: Tue Mar 12 16:52:05 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN940452168.csv"
dir=crime base=crime3socnet5switch
start: Tue Mar 12 16:56:49 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN195532563.csv"
Evaluation took:
  3433.248 seconds of real time
  3429.935571 seconds of total run time (3417.465467 user, 12.470104 system)
  [ Run times consist of 160.347 seconds GC time, and 3269.589 seconds non-GC time. ]
  99.90% CPU
  37 lambdas converted
  9,269,601,237,549 processor cycles
  1,355,023,980,992 bytes consed
  
Evaluation took:
  3777.848 seconds of real time
  3776.301915 seconds of total run time (3764.643687 user, 11.658228 system)
  [ Run times consist of 178.371 seconds GC time, and 3597.931 seconds non-GC time. ]
  99.96% CPU
  37 lambdas converted
  10,049,650,317,364 processor cycles
  1,355,041,838,592 bytes consed
  
dir=crime base=crime3socnet5switch
start: Tue Mar 12 17:16:31 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN783839685.csv"
Evaluation took:
  3766.022 seconds of real time
  3742.140108 seconds of total run time (3730.535872 user, 11.604236 system)
  [ Run times consist of 174.660 seconds GC time, and 3567.481 seconds non-GC time. ]
  99.37% CPU
  37 lambdas converted
  10,018,164,842,019 processor cycles
  1,354,982,180,576 bytes consed
  
Evaluation took:
  3827.030 seconds of real time
  3815.039025 seconds of total run time (3801.970012 user, 13.069013 system)
  [ Run times consist of 177.024 seconds GC time, and 3638.016 seconds non-GC time. ]
  99.69% CPU
  37 lambdas converted
  10,180,477,159,039 processor cycles
  1,355,061,596,832 bytes consed
  
dir=crime base=crime3socnet5switch
start: Tue Mar 12 17:17:31 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN763656693.csv"
dir=crime base=crime3socnet5switch
start: Tue Mar 12 17:17:46 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1dThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN657119318.csv"
SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME param"variables" "utilities" "network" "eyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....
opco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN163165872.csv"

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN023244420.csv"
consist of 181.347 seconds GC time, and 3701.306 seconds non-GC time. ]
  99.78% CPU
  37 lambdas converted
  10,351,416,330,966 processor cycles
  1,355,064,119,120 bytes consed
  
dir=crime base=crime3socnet5switch
start: Tue Mar 12 17:18:46 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN440970943.csv"
dir=crime base=crime3socnet5switch
start: Tue Mar 12 17:21:45 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN842849580.csv"
dir=crime base=crime3socnet5switch
start: Tue Mar 12 17:24:01 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN606350264.csv"
dir=crime base=crime3socnet5switch
start: Tue Mar 12 17:24:30 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN943817699.csv"
dir=crime base=crime3socnet5switch
start: Tue Mar 12 17:25:15 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN217581464.csv"
dir=crime base=crime3socnet5switch
start: Tue Mar 12 17:26:00 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN965604772.csv"
dir=crime base=crime3socnet5switch
start: Tue Mar 12 17:27:00 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome e3socnet5switch
start: Tue Mar 12 17:27:30 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BFThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposeThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "nedir=crime base=crime3socnet5switch
start: infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagarddir=crime base=crime3socnet5switch
start: action'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN514196553.csv"
dir=crime base=crime3socnet5switch
start: Tue Mar 12 17:28:31 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
-console () ) --loaThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN483792739.csv"
-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN211909859.csv"
00 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN732048524.csv"
use for research purposeThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN655413591.csv"
dir=crime base=crime3socnet5switch
start: Tue Mar 12 17:30:46 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN945770218.csv"
dir=crime base=crime3socnet5switch
start: Tue Mar 12 17:31:31 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN422774872.csv"
dir=crime base=crime3socnet5switch
start: Tue Mar 12 17:34:48 CDT 2013

running this commandline:
ti
running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --loaThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN551206214.csv"
04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN300292915.csv"
Evaluation took:
  3835.595 seconds of real time
  3833.216262 seconds of total run time (3821.381062 user, 11.835200 system)
  [ Run times consist of 173.370 seconds GC time, and 3659.847 seconds non-GC time. ]
  99.94% CPU
  37 lambdas converted
  10,203,287,788,237 processor cycles
  1,355,061,126,496 bytes consed
  
dir=crime base=crime3socnet5switch
start: Tue Mar 12 17:47:48 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles eaThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN657313029.csv"
Evaluation took:
  3890.181 seconds of real time
  3883.672592 seconds of total run time (3871.214486 user, 12.458106 system)
  [ Run times consist of 182.622 seconds GC time, and 3701.051 seconds non-GC time. ]
  99.83% CPU
  37 lambdas converted
  10,348,425,322,231 processor cycles
  1,355,062,321,360 bytes consed
  
dir=crime base=crime3socnet5switch
start: Tue Mar 12 17:49:03 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN614279858.csv"
Evaluation took:
  3802.514 seconds of real time
  3798.092602 seconds of total run time (3785.123574 user, 12.969028 system)
  [ Run times consist of 175.052 seconds GC time, and 3623.041 seconds non-GC time. ]
  99.88% CPU
  37 lambdas converted
  10,115,246,815,585 processor cycles
  1,355,051,786,448 bytes consed
  
Evaluation took:
  3925.605 seconds of real time
  3916.114661 seconds of total run time (3903.815530 user, 12.299131 system)
  [ Run times consist of 186.969 seconds GC time, and 3729.146 seconds non-GC time. ]
  99.76% CPU
  37 lambdas converted
  10,442,686,826,103 processor cycles
  1,355,046,844,160 bytes consed
  
dir=crime base=crime3socnet5switch
start: Tue Mar 12 18:06:16 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles eaThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BFThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposeThis is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN348870372.csv"
utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN361424701.csv"
dir=crime base=crime3socnet5switch
start: Tue Mar 12 18:08:01 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN706761060.csv"
dir=crime base=crime3socnet5switch
start: Tue Mar 12 18:08:31 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
..
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN840064472.csv"
dir=crime base=crime3socnet5switch
start: Tue Mar 12 18:13:31 CDT 2013

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

dir=crime base=crime3socnet5switch
start: Tue Mar 12 18:13:31 CDT 2013
This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

running this commandline:
time sbcl --eval (defvar *data-dir* "../data/crime/crime3socnet5switch") --load start --eval (defun report-progress-to-console () ) --load crime/crime3socnet5switch

This is SBCL 1.1.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 

"POPCO" 
"Welcome to COHERE, incorporating ACME, ECHO, DECO, IMP, HOTCO etc." 
"Version 4.0. June, 2000" 
"This program is copyright (c) Paul Thagard 1996, 1997, 2000." 
"Permission is granted for use for research purposes only." 
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
"Modifications, additional code for POPCO by Marshall Abrams and Kristen Hammack copyright (c) Marshall Abrams 2012, 2013." To load "cl-ppcre":
  Load 1 ASDF system:
    cl-ppcre
; Loading "cl-ppcre"
....

"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"variables" "utilities" "network" "echo" "imp" "acme" "cohere" "acme-infer" "social-net" "persons" "natsel" "popco-macros" "popco-utils" "popco-fmt-utils" "popco-fmt-csv" "popco-fmt-netlogo" "popco-fmt-guessML-general" "popco-fmt-guessML-specific1" "popco-model-run" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"SBCL-specific code:" "sbcl-sockets" "popco-fmt-guessCmds" "popco" 
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
Output threshold unchanged at 0.0d0
Decay unchanged at 0.1d0
Excitation increased from 0.04d0 to 0.1d0
Inhibition intensified from -0.06d0 to -0.2d0
"Main POPCO routines loaded (popco.lisp)." Now using Grossberg updating rule.
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.
Output threshold unchanged at 0.0d0

Decay unchanged at 0.1d0

Excitation increased from 0.04d0 to 0.1d0
COHERE+POPCO ready.
Inhibition intensified from -0.06d0 to -0.2d0
"HT1989params" Network and ACME parameters set to values specified in Holyoak and Thagard 1989 'Analog mapping by constraint satisfaction'.


COHERE+POPCO ready.

Creating analogy networks for each person ....

Creating analogy networks for each person ....

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN635976509.csv"

(V14 V13 V12 V11 V10 V09 V08 V07 V06 V05 V04 V03 V02 V01 VF06 VF05 VF04 VF03
 VF02 VF01 BF06 BF05 BF04 BF03 BF02 BF01 B14 B13 B12 B11 B10 B09 B08 B07 B06
 B05 B04 B03 B02 B01 AA) 
Running popco with maximum of 5 cycles each in 8000 popco tick(s) ....
*do-converse* T; *do-update-propn-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* T; *use-new-random-state* T
Recreating output file csv file "../data/crime/crime3socnet5switch/RUN337332701.csv"
Evaluation took:
  3809.392 seconds of real time
  3801.338109 seconds of total run time (3789.788864 user, 11.549245 system)
  [ Run times consist of 171.129 seconds GC time, and 3630.210 seconds non-GC time. ]
  99.79% CPU
  37 lambdas converted
  10,133,533,895,520 processor cycles
  1,355,020,426,384 bytes consed
  
Evaluation took:
  3824.630 seconds of real time
  3811.304594 seconds of total run time (3799.209433 user, 12.095161 system)
  [ Run times consist of 170.679 seconds GC time, and 3640.626 seconds non-GC time. ]
  99.65% CPU
  37 lambdas converted
  10,174,059,926,219 processor cycles
  1,355,023,739,520 bytes consed
  
Evaluation took:
  3950.188 seconds of real time
  3860.900054 seconds of total run time (3849.003862 user, 11.896192 system)
  [ Run times consist of 178.010 seconds GC time, and 3682.891 seconds non-GC time. ]
  97.74% CPU
  37 lambdas converted
  10,508,071,744,476 processor cycles
  1,355,011,485,408 bytes consed
  
Evaluation took:
  3875.705 seconds of real time
  3873.952071 seconds of total run time (3862.463817 user, 11.488254 system)
  [ Run times consist of 176.146 seconds GC time, and 3697.807 seconds non-GC time. ]
  99.95% CPU
  37 lambdas converted
  10,309,951,437,254 processor cycles
  1,355,057,351,264 bytes consed
  
Evaluation took:
  3893.114 seconds of real time
  3877.934464 seconds of total run time (3864.024579 user, 13.909885 system)
  [ Run times consist of 179.727 seconds GC time, and 3698.208 seconds non-GC time. ]
  99.61% CPU
  37 lambdas converted
  10,356,293,349,272 processor cycles
  1,355,050,593,600 bytes consed
  
Evaluation took:
  4039.205 seconds of real time
  4033.716782 seconds of total run time (4019.218986 user, 14.497796 system)
  [ Run times consist of 191.053 seconds GC time, and 3842.664 seconds non-GC time. ]
  99.86% CPU
  37 lambdas converted
  10,744,887,924,735 processor cycles
  1,355,070,289,488 bytes consed
  
Evaluation took:
  3956.824 seconds of real time
  3951.604265 seconds of total run time (3937.593395 user, 14.010870 system)
  [ Run times consist of 180.375 seconds GC time, and 3771.230 seconds non-GC time. ]
  99.87% CPU
  37 lambdas converted
  10,525,822,125,363 processor cycles
  1 page fault
  1,355,048,018,960 bytes consed
  
Evaluation took:
  9184.477 seconds of real time
  9150.078976 seconds of total run time (9115.104293 user, 34.974683 system)
  [ Run times consist of 494.575 seconds GC time, and 8655.504 seconds non-GC time. ]
  99.63% CPU
  37 lambdas converted
  14,728,364,535,173 processor cycles
  1,355,008,249,808 bytes consed
  
Evaluation took:
  9188.744 seconds of real time
  9152.238649 seconds of total run time (9116.188129 user, 36.050520 system)
  [ Run times consist of 495.287 seconds GC time, and 8656.952 seconds non-GC time. ]
  99.60% CPU
  37 lambdas converted
  14,735,454,923,041 processor cycles
  1,355,075,399,312 bytes consed
  
Evaluation took:
  9316.078 seconds of real time
  9272.248403 seconds of total run time (9234.792098 user, 37.456305 system)
  [ Run times consist of 515.871 seconds GC time, and 8756.378 seconds non-GC time. ]
  99.53% CPU
  37 lambdas converted
  14,939,390,407,308 processor cycles
  1,355,051,571,344 bytes consed
  
Evaluation took:
  9328.667 seconds of real time
  9273.749176 seconds of total run time (9238.526531 user, 35.222645 system)
  [ Run times consist of 481.211 seconds GC time, and 8792.539 seconds non-GC time. ]
  99.41% CPU
  37 lambdas converted
  14,959,588,564,190 processor cycles
  1,355,062,392,400 bytes consed
  
Evaluation took:
  9306.351 seconds of real time
  9258.730459 seconds of total run time (9223.391831 user, 35.338628 system)
  [ Run times consist of 495.669 seconds GC time, and 8763.062 seconds non-GC time. ]
  99.49% CPU
  37 lambdas converted
  14,923,719,915,748 processor cycles
  1,355,083,328,944 bytes consed
  
Evaluation took:
  9331.669 seconds of real time
  9275.343933 seconds of total run time (9239.089445 user, 36.254488 system)
  [ Run times consist of 499.996 seconds GC time, and 8775.348 seconds non-GC time. ]
  99.40% CPU
  37 lambdas converted
  14,964,423,762,613 processor cycles
  1,355,071,268,816 bytes consed
  
Evaluation took:
  9281.001 seconds of real time
  9233.561285 seconds of total run time (9198.245654 user, 35.315631 system)
  [ Run times consist of 501.437 seconds GC time, and 8732.125 seconds non-GC time. ]
  99.49% CPU
  37 lambdas converted
  14,883,199,498,398 processor cycles
  1,355,056,250,496 bytes consed
  
Evaluation took:
  9344.216 seconds of real time
  9307.448053 seconds of total run time (9266.409292 user, 41.038761 system)
  [ Run times consist of 508.668 seconds GC time, and 8798.781 seconds non-GC time. ]
  99.61% CPU
  37 lambdas converted
  14,984,452,710,562 processor cycles
  1,355,027,010,256 bytes consed
  
Evaluation took:
  9402.778 seconds of real time
  9360.211032 seconds of total run time (9324.658437 user, 35.552595 system)
  [ Run times consist of 525.492 seconds GC time, and 8834.720 seconds non-GC time. ]
  99.55% CPU
  37 lambdas converted
  15,078,402,546,955 processor cycles
  1,355,025,182,752 bytes consed
  
Evaluation took:
  9331.647 seconds of real time
  9278.352477 seconds of total run time (9243.261811 user, 35.090666 system)
  [ Run times consist of 484.559 seconds GC time, and 8793.794 seconds non-GC time. ]
  99.43% CPU
  37 lambdas converted
  14,964,432,884,063 processor cycles
  1,355,029,120,848 bytes consed
  
Evaluation took:
  9408.067 seconds of real time
  9368.913709 seconds of total run time (9332.589231 user, 36.324478 system)
  [ Run times consist of 500.819 seconds GC time, and 8868.095 seconds non-GC time. ]
  99.58% CPU
  37 lambdas converted
  15,086,918,713,896 processor cycles
  1,355,074,341,056 bytes consed
  
Evaluation took:
  9380.723 seconds of real time
  9339.253217 seconds of total run time (9303.931587 user, 35.321630 system)
  [ Run times consist of 498.825 seconds GC time, and 8840.429 seconds non-GC time. ]
  99.56% CPU
  37 lambdas converted
  15,042,936,326,328 processor cycles
  1,355,089,871,408 bytes consed
  
Evaluation took:
  9390.335 seconds of real time
  9350.108568 seconds of total run time (9315.130885 user, 34.977683 system)
  [ Run times consist of 506.980 seconds GC time, and 8843.129 seconds non-GC time. ]
  99.57% CPU
  37 lambdas converted
  15,058,397,031,798 processor cycles
  1,355,044,750,736 bytes consed
  
Evaluation took:
  9402.231 seconds of real time
  9352.145257 seconds of total run time (9317.470529 user, 34.674728 system)
  [ Run times consist of 486.361 seconds GC time, and 8865.785 seconds non-GC time. ]
  99.47% CPU
  37 lambdas converted
  15,077,813,148,611 processor cycles
  1,355,068,700,464 bytes consed
  
Evaluation took:
  9439.930 seconds of real time
  9396.704484 seconds of total run time (9360.411002 user, 36.293482 system)
  [ Run times consist of 518.768 seconds GC time, and 8877.937 seconds non-GC time. ]
  99.54% CPU
  37 lambdas converted
  15,138,096,344,799 processor cycles
  1,355,073,970,864 bytes consed
  
Evaluation took:
  9369.781 seconds of real time
  9316.671651 seconds of total run time (9282.230887 user, 34.440764 system)
  [ Run times consist of 498.287 seconds GC time, and 8818.385 seconds non-GC time. ]
  99.43% CPU
  37 lambdas converted
  15,025,456,140,582 processor cycles
  1,354,996,274,272 bytes consed
  
Evaluation took:
  9420.176 seconds of real time
  9362.307713 seconds of total run time (9328.211896 user, 34.095817 system)
  [ Run times consist of 518.578 seconds GC time, and 8843.730 seconds non-GC time. ]
  99.39% CPU
  37 lambdas converted
  15,106,302,011,930 processor cycles
  1,355,065,037,520 bytes consed
  
Evaluation took:
  9394.083 seconds of real time
  9350.265544 seconds of total run time (9314.131037 user, 36.134507 system)
  [ Run times consist of 485.673 seconds GC time, and 8864.593 seconds non-GC time. ]
  99.53% CPU
  37 lambdas converted
  15,064,426,873,992 processor cycles
  1,355,042,590,480 bytes consed
  
Evaluation took:
  9453.720 seconds of real time
  9409.832489 seconds of total run time (9372.248202 user, 37.584287 system)
  [ Run times consist of 496.156 seconds GC time, and 8913.677 seconds non-GC time. ]
  99.54% CPU
  37 lambdas converted
  15,160,147,095,362 processor cycles
  1,355,050,503,872 bytes consed
  
Evaluation took:
  9389.427 seconds of real time
  9353.724017 seconds of total run time (9318.740336 user, 34.983681 system)
  [ Run times consist of 492.199 seconds GC time, and 8861.526 seconds non-GC time. ]
  99.62% CPU
  37 lambdas converted
  15,057,090,336,334 processor cycles
  1,355,045,677,216 bytes consed
  
Evaluation took:
  9445.305 seconds of real time
  9394.021892 seconds of total run time (9348.909750 user, 45.112142 system)
  [ Run times consist of 499.844 seconds GC time, and 8894.178 seconds non-GC time. ]
  99.46% CPU
  37 lambdas converted
  15,146,560,313,825 processor cycles
  1,355,069,649,856 bytes consed
  
Evaluation took:
  9487.414 seconds of real time
  9439.401992 seconds of total run time (9402.994527 user, 36.407465 system)
  [ Run times consist of 498.248 seconds GC time, and 8941.154 seconds non-GC time. ]
  99.49% CPU
  37 lambdas converted
  15,214,060,092,304 processor cycles
  1,355,043,322,944 bytes consed
  
Evaluation took:
  9414.664 seconds of real time
  9368.040841 seconds of total run time (9333.331118 user, 34.709723 system)
  [ Run times consist of 490.794 seconds GC time, and 8877.247 seconds non-GC time. ]
  99.50% CPU
  37 lambdas converted
  15,097,545,885,640 processor cycles
  1,355,054,000,272 bytes consed
  
Evaluation took:
  3833.829 seconds of real time
  3825.136491 seconds of total run time (3813.609243 user, 11.527248 system)
  [ Run times consist of 176.118 seconds GC time, and 3649.019 seconds non-GC time. ]
  99.77% CPU
  37 lambdas converted
  10,198,549,084,666 processor cycles
  1,355,063,991,536 bytes consed
  
Evaluation took:
  9493.848 seconds of real time
  9446.675887 seconds of total run time (9410.911324 user, 35.764563 system)
  [ Run times consist of 503.140 seconds GC time, and 8943.536 seconds non-GC time. ]
  99.50% CPU
  37 lambdas converted
  15,224,345,187,450 processor cycles
  1,355,062,457,040 bytes consed
  
Evaluation took:
  3880.997 seconds of real time
  3878.534374 seconds of total run time (3866.154256 user, 12.380118 system)
  [ Run times consist of 178.459 seconds GC time, and 3700.076 seconds non-GC time. ]
  99.94% CPU
  37 lambdas converted
  10,324,130,919,166 processor cycles
  1,355,049,850,080 bytes consed
  
Evaluation took:
  9565.104 seconds of real time
  9510.797139 seconds of total run time (9472.894901 user, 37.902238 system)
  [ Run times consist of 518.349 seconds GC time, and 8992.449 seconds non-GC time. ]
  99.43% CPU
  37 lambdas converted
  15,338,638,583,022 processor cycles
  1 page fault
  1,354,960,841,168 bytes consed
  
Evaluation took:
  9551.896 seconds of real time
  9516.617254 seconds of total run time (9482.031512 user, 34.585742 system)
  [ Run times consist of 504.830 seconds GC time, and 9011.788 seconds non-GC time. ]
  99.63% CPU
  37 lambdas converted
  15,317,530,224,310 processor cycles
  1,355,021,721,680 bytes consed
  
Evaluation took:
  3912.663 seconds of real time
  3908.817769 seconds of total run time (3895.531789 user, 13.285980 system)
  [ Run times consist of 179.145 seconds GC time, and 3729.673 seconds non-GC time. ]
  99.90% CPU
  37 lambdas converted
  10,408,268,952,379 processor cycles
  1,355,054,166,016 bytes consed
  
Evaluation took:
  3880.378 seconds of real time
  3875.705803 seconds of total run time (3862.931745 user, 12.774058 system)
  [ Run times consist of 174.452 seconds GC time, and 3701.254 seconds non-GC time. ]
  99.88% CPU
  37 lambdas converted
  10,322,417,085,982 processor cycles
  1,355,007,965,712 bytes consed
  
Evaluation took:
  4134.137 seconds of real time
  4105.942802 seconds of total run time (4092.553837 user, 13.388965 system)
  [ Run times consist of 189.859 seconds GC time, and 3916.084 seconds non-GC time. ]
  99.32% CPU
  37 lambdas converted
  10,997,451,679,512 processor cycles
  1,355,061,897,168 bytes consed
  
Evaluation took:
  3885.697 seconds of real time
  3879.571216 seconds of total run time (3865.982281 user, 13.588935 system)
  [ Run times consist of 172.880 seconds GC time, and 3706.692 seconds non-GC time. ]
  99.84% CPU
  37 lambdas converted
  10,336,516,977,546 processor cycles
  1,355,046,683,104 bytes consed
  
Evaluation took:
  3903.342 seconds of real time
  3884.701436 seconds of total run time (3872.644269 user, 12.057167 system)
  [ Run times consist of 175.161 seconds GC time, and 3709.541 seconds non-GC time. ]
  99.52% CPU
  37 lambdas converted
  10,383,572,010,663 processor cycles
  1,354,951,439,584 bytes consed
  
Evaluation took:
  3920.078 seconds of real time
  3900.574023 seconds of total run time (3888.009933 user, 12.564090 system)
  [ Run times consist of 176.414 seconds GC time, and 3724.161 seconds non-GC time. ]
  99.50% CPU
  37 lambdas converted
  10,427,994,228,058 processor cycles
  1,355,077,252,576 bytes consed
  
Evaluation took:
  3972.375 seconds of real time
  3965.498154 seconds of total run time (3951.588268 user, 13.909886 system)
  [ Run times consist of 187.082 seconds GC time, and 3778.417 seconds non-GC time. ]
  99.83% CPU
  37 lambdas converted
  10,567,110,984,081 processor cycles
  1,355,065,928,112 bytes consed
  
Evaluation took:
  3992.809 seconds of real time
  3986.841909 seconds of total run time (3972.899028 user, 13.942881 system)
  [ Run times consist of 183.118 seconds GC time, and 3803.724 seconds non-GC time. ]
  99.85% CPU
  37 lambdas converted
  10,621,478,530,652 processor cycles
  1,355,057,958,336 bytes consed
  
Evaluation took:
  3996.533 seconds of real time
  3989.212548 seconds of total run time (3977.061395 user, 12.151153 system)
  [ Run times consist of 186.495 seconds GC time, and 3802.718 seconds non-GC time. ]
  99.82% CPU
  37 lambdas converted
  10,631,384,591,160 processor cycles
  1,355,051,766,112 bytes consed
  
Evaluation took:
  3917.896 seconds of real time
  3911.644340 seconds of total run time (3897.882432 user, 13.761908 system)
  [ Run times consist of 175.888 seconds GC time, and 3735.757 seconds non-GC time. ]
  99.84% CPU
  37 lambdas converted
  10,422,258,276,885 processor cycles
  1,354,995,725,776 bytes consed
  
Evaluation took:
  3933.670 seconds of real time
  3928.214821 seconds of total run time (3909.352688 user, 18.862133 system)
  [ Run times consist of 179.884 seconds GC time, and 3748.331 seconds non-GC time. ]
  99.86% CPU
  37 lambdas converted
  10,464,218,967,086 processor cycles
  1,355,068,745,648 bytes consed
  
Evaluation took:
  9308.547 seconds of real time
  9270.683642 seconds of total run time (9235.355013 user, 35.328629 system)
  [ Run times consist of 494.407 seconds GC time, and 8776.277 seconds non-GC time. ]
  99.59% CPU
  37 lambdas converted
  14,927,226,525,249 processor cycles
  1,355,065,388,608 bytes consed
  
Evaluation took:
  9334.701 seconds of real time
  9285.528386 seconds of total run time (9249.871806 user, 35.656580 system)
  [ Run times consist of 503.908 seconds GC time, and 8781.621 seconds non-GC time. ]
  99.47% CPU
  37 lambdas converted
  14,969,161,990,243 processor cycles
  1,355,044,663,488 bytes consed
  
Evaluation took:
  9745.038 seconds of real time
  9698.238644 seconds of total run time (9657.927772 user, 40.310872 system)
  [ Run times consist of 537.055 seconds GC time, and 9161.184 seconds non-GC time. ]
  99.52% CPU
  37 lambdas converted
  15,627,352,756,323 processor cycles
  1,355,061,765,632 bytes consed
  
Evaluation took:
  9647.991 seconds of real time
  9600.995427 seconds of total run time (9560.105643 user, 40.889784 system)
  [ Run times consist of 534.390 seconds GC time, and 9066.606 seconds non-GC time. ]
  99.51% CPU
  37 lambdas converted
  15,471,876,338,077 processor cycles
  1,354,999,429,136 bytes consed
  
Evaluation took:
  9418.249 seconds of real time
  9370.490469 seconds of total run time (9335.470793 user, 35.019676 system)
  [ Run times consist of 492.645 seconds GC time, and 8877.846 seconds non-GC time. ]
  99.49% CPU
  37 lambdas converted
  15,103,145,202,715 processor cycles
  1,355,083,911,584 bytes consed
  
Evaluation took:
  9273.551 seconds of real time
  9218.476578 seconds of total run time (9181.702169 user, 36.774409 system)
  [ Run times consist of 509.858 seconds GC time, and 8708.619 seconds non-GC time. ]
  99.41% CPU
  37 lambdas converted
  14,871,223,757,126 processor cycles
  1,355,016,393,392 bytes consed
  
Evaluation took:
  9274.128 seconds of real time
  9236.595823 seconds of total run time (9200.592297 user, 36.003526 system)
  [ Run times consist of 499.393 seconds GC time, and 8737.203 seconds non-GC time. ]
  99.60% CPU
  37 lambdas converted
  14,872,147,833,657 processor cycles
  1,355,072,589,952 bytes consed
  
Evaluation took:
  9449.280 seconds of real time
  9407.191889 seconds of total run time (9370.925403 user, 36.266486 system)
  [ Run times consist of 509.824 seconds GC time, and 8897.368 seconds non-GC time. ]
  99.55% CPU
  37 lambdas converted
  15,152,972,848,706 processor cycles
  1,355,011,359,216 bytes consed
  
Evaluation took:
  9362.936 seconds of real time
  9324.077525 seconds of total run time (9288.201979 user, 35.875546 system)
  [ Run times consist of 503.262 seconds GC time, and 8820.816 seconds non-GC time. ]
  99.58% CPU
  37 lambdas converted
  15,014,562,184,515 processor cycles
  1,355,067,142,832 bytes consed
  
Evaluation took:
  9436.859 seconds of real time
  9382.997568 seconds of total run time (9348.785769 user, 34.211799 system)
  [ Run times consist of 506.582 seconds GC time, and 8876.416 seconds non-GC time. ]
  99.43% CPU
  37 lambdas converted
  15,132,931,464,897 processor cycles
  1,355,056,133,936 bytes consed
  
Evaluation took:
  9353.045 seconds of real time
  9313.327159 seconds of total run time (9276.874701 user, 36.452458 system)
  [ Run times consist of 482.344 seconds GC time, and 8830.984 seconds non-GC time. ]
  99.58% CPU
  37 lambdas converted
  14,998,583,811,956 processor cycles
  1,355,050,884,512 bytes consed
  
Evaluation took:
  9305.941 seconds of real time
  9250.649688 seconds of total run time (9215.508030 user, 35.141658 system)
  [ Run times consist of 506.871 seconds GC time, and 8743.779 seconds non-GC time. ]
  99.41% CPU
  37 lambdas converted
  14,923,131,148,580 processor cycles
  1,355,004,743,744 bytes consed
  
Evaluation took:
  9710.644 seconds of real time
  9671.010783 seconds of total run time (9631.172839 user, 39.837944 system)
  [ Run times consist of 517.860 seconds GC time, and 9153.151 seconds non-GC time. ]
  99.59% CPU
  37 lambdas converted
  15,572,341,962,575 processor cycles
  1,355,054,904,672 bytes consed
  
Evaluation took:
  9344.161 seconds of real time
  9289.401797 seconds of total run time (9253.762215 user, 35.639582 system)
  [ Run times consist of 487.865 seconds GC time, and 8801.537 seconds non-GC time. ]
  99.41% CPU
  37 lambdas converted
  14,984,421,287,081 processor cycles
  1,355,076,212,016 bytes consed
  
Evaluation took:
  9219.673 seconds of real time
  9175.415125 seconds of total run time (9141.731246 user, 33.683879 system)
  [ Run times consist of 481.026 seconds GC time, and 8694.390 seconds non-GC time. ]
  99.52% CPU
  37 lambdas converted
  14,784,946,653,907 processor cycles
  1,355,062,379,280 bytes consed
  
Evaluation took:
  9373.503 seconds of real time
  9328.936785 seconds of total run time (9293.010247 user, 35.926538 system)
  [ Run times consist of 494.560 seconds GC time, and 8834.377 seconds non-GC time. ]
  99.52% CPU
  37 lambdas converted
  15,031,634,331,978 processor cycles
  1,354,981,920,320 bytes consed
  
Evaluation took:
  9292.151 seconds of real time
  9258.015568 seconds of total run time (9222.860912 user, 35.154656 system)
  [ Run times consist of 500.094 seconds GC time, and 8757.922 seconds non-GC time. ]
  99.63% CPU
  37 lambdas converted
  14,900,971,344,376 processor cycles
  1,354,984,807,392 bytes consed
  
Evaluation took:
  9250.297 seconds of real time
  9204.884645 seconds of total run time (9168.884117 user, 36.000528 system)
  [ Run times consist of 499.579 seconds GC time, and 8705.306 seconds non-GC time. ]
  99.51% CPU
  37 lambdas converted
  14,833,782,484,283 processor cycles
  1,355,078,226,336 bytes consed
  
Evaluation took:
  9280.912 seconds of real time
  9230.088813 seconds of total run time (9195.508071 user, 34.580742 system)
  [ Run times consist of 486.094 seconds GC time, and 8743.995 seconds non-GC time. ]
  99.45% CPU
  37 lambdas converted
  14,882,949,433,143 processor cycles
  1,355,042,500,928 bytes consed
  
Evaluation took:
  9332.649 seconds of real time
  9288.969862 seconds of total run time (9254.954033 user, 34.015829 system)
  [ Run times consist of 493.846 seconds GC time, and 8795.124 seconds non-GC time. ]
  99.53% CPU
  37 lambdas converted
  14,965,935,914,036 processor cycles
  1,355,079,457,552 bytes consed
  
Evaluation took:
  9292.225 seconds of real time
  9260.172239 seconds of total run time (9224.951594 user, 35.220645 system)
  [ Run times consist of 495.574 seconds GC time, and 8764.599 seconds non-GC time. ]
  99.66% CPU
  37 lambdas converted
  14,901,040,654,545 processor cycles
  1,355,048,811,344 bytes consed
  
Evaluation took:
  9442.740 seconds of real time
  9392.365143 seconds of total run time (9356.687567 user, 35.677576 system)
  [ Run times consist of 521.487 seconds GC time, and 8870.879 seconds non-GC time. ]
  99.47% CPU
  37 lambdas converted
  15,142,478,270,621 processor cycles
  1,355,028,338,976 bytes consed
  
Evaluation took:
  9183.623 seconds of real time
  9143.442986 seconds of total run time (9107.203495 user, 36.239491 system)
  [ Run times consist of 493.160 seconds GC time, and 8650.283 seconds non-GC time. ]
  99.56% CPU
  37 lambdas converted
  14,726,941,191,165 processor cycles
  1,355,033,977,840 bytes consed
  
Evaluation took:
  9304.758 seconds of real time
  9257.438656 seconds of total run time (9222.821918 user, 34.616738 system)
  [ Run times consist of 510.194 seconds GC time, and 8747.245 seconds non-GC time. ]
  99.49% CPU
  37 lambdas converted
  14,921,208,644,672 processor cycles
  1,354,997,995,184 bytes consed
  
Evaluation took:
  9391.549 seconds of real time
  9335.890729 seconds of total run time (9300.069175 user, 35.821554 system)
  [ Run times consist of 516.043 seconds GC time, and 8819.848 seconds non-GC time. ]
  99.41% CPU
  37 lambdas converted
  15,060,293,788,221 processor cycles
  1,355,065,897,104 bytes consed
  
Evaluation took:
  9405.429 seconds of real time
  9366.909015 seconds of total run time (9330.448557 user, 36.460458 system)
  [ Run times consist of 509.157 seconds GC time, and 8857.753 seconds non-GC time. ]
  99.59% CPU
  37 lambdas converted
  15,082,795,136,421 processor cycles
  1,355,033,003,872 bytes consed
  
Evaluation took:
  9418.759 seconds of real time
  9362.605667 seconds of total run time (9326.846104 user, 35.759563 system)
  [ Run times consist of 493.927 seconds GC time, and 8868.679 seconds non-GC time. ]
  99.40% CPU
  37 lambdas converted
  15,103,951,698,131 processor cycles
  1,355,043,007,680 bytes consed
  
Evaluation took:
  9390.969 seconds of real time
  9329.718667 seconds of total run time (9294.088084 user, 35.630583 system)
  [ Run times consist of 516.002 seconds GC time, and 8813.717 seconds non-GC time. ]
  99.35% CPU
  37 lambdas converted
  15,059,607,119,272 processor cycles
  1,355,058,333,456 bytes consed
  
Evaluation took:
  9386.236 seconds of real time
  9325.216352 seconds of total run time (9288.547926 user, 36.668426 system)
  [ Run times consist of 498.929 seconds GC time, and 8826.288 seconds non-GC time. ]
  99.35% CPU
  37 lambdas converted
  15,051,852,608,742 processor cycles
  1,355,041,750,160 bytes consed
  
Evaluation took:
  9624.062 seconds of real time
  9568.488369 seconds of total run time (9533.722654 user, 34.765715 system)
  [ Run times consist of 511.078 seconds GC time, and 9057.411 seconds non-GC time. ]
  99.42% CPU
  37 lambdas converted
  15,433,248,931,636 processor cycles
  1,355,024,017,200 bytes consed
  
Evaluation took:
  9461.996 seconds of real time
  9428.673624 seconds of total run time (9391.906213 user, 36.767411 system)
  [ Run times consist of 515.873 seconds GC time, and 8912.801 seconds non-GC time. ]
  99.65% CPU
  37 lambdas converted
  15,173,263,121,991 processor cycles
  1,355,047,522,256 bytes consed
  
Evaluation took:
  9474.950 seconds of real time
  9429.158550 seconds of total run time (9393.787927 user, 35.370623 system)
  [ Run times consist of 513.614 seconds GC time, and 8915.545 seconds non-GC time. ]
  99.52% CPU
  37 lambdas converted
  15,194,325,928,837 processor cycles
  1,355,052,455,216 bytes consed
  
Evaluation took:
  9322.399 seconds of real time
  9288.464938 seconds of total run time (9251.613541 user, 36.851397 system)
  [ Run times consist of 500.129 seconds GC time, and 8788.336 seconds non-GC time. ]
  99.64% CPU
  37 lambdas converted
  14,949,516,529,507 processor cycles
  1,355,059,910,752 bytes consed
  
Evaluation took:
  9371.854 seconds of real time
  9343.404586 seconds of total run time (9306.998121 user, 36.406465 system)
  [ Run times consist of 499.031 seconds GC time, and 8844.374 seconds non-GC time. ]
  99.70% CPU
  37 lambdas converted
  15,028,844,204,640 processor cycles
  1,355,067,086,096 bytes consed
  
Evaluation took:
  9449.958 seconds of real time
  9417.123380 seconds of total run time (9381.129852 user, 35.993528 system)
  [ Run times consist of 488.105 seconds GC time, and 8929.019 seconds non-GC time. ]
  99.65% CPU
  37 lambdas converted
  15,153,936,448,984 processor cycles
  1,355,053,556,016 bytes consed
  
Evaluation took:
  9514.390 seconds of real time
  9491.113131 seconds of total run time (9450.727271 user, 40.385860 system)
  [ Run times consist of 501.419 seconds GC time, and 8989.695 seconds non-GC time. ]
  99.76% CPU
  37 lambdas converted
  15,257,559,053,888 processor cycles
  1,355,074,217,072 bytes consed
  
Evaluation took:
  9673.786 seconds of real time
  9640.902360 seconds of total run time (9602.786154 user, 38.116206 system)
  [ Run times consist of 522.008 seconds GC time, and 9118.895 seconds non-GC time. ]
  99.66% CPU
  37 lambdas converted
  15,513,242,460,849 processor cycles
  1,355,044,119,248 bytes consed
  
